

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Sep 16 11:36:53 2021

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           ; Version 2.05
    36                           ; Generated 20/12/2018 GMT
    37                           ; 
    38                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  007A52                     __pidataCOMRAM:
    72                           	opt callstack 0
    73                           
    74                           ;initializer for _tiempo_parpadeo_off
    75  007A52  0001               	dw	1
    76  007A54  0000               	dw	0
    77                           
    78                           ;initializer for _tiempo_parpadeo_on
    79  007A56  0001               	dw	1
    80  007A58  0000               	dw	0
    81                           
    82                           ;initializer for _tiempo_ventana_peso
    83  007A5A  0009               	dw	9
    84  007A5C  0000               	dw	0
    85                           
    86                           ;initializer for _col
    87  007A5E  FF                 	db	255
    88                           
    89                           ;initializer for _fila
    90  007A5F  FF                 	db	255
    91                           
    92                           ;initializer for tic_encoder@estado
    93  007A60  04                 	db	4
    94                           
    95                           ;initializer for tic_debounce@debounce_tic
    96  007A61  0A                 	db	10
    97                           
    98                           ;initializer for _OffsetPeriodo
    99  007A62  20                 	db	32
   100                           
   101                           ;initializer for _UpperByte
   102  007A63  FF                 	db	255
   103                           
   104                           ;initializer for Send4Disp@Nro_Disp
   105  007A64  01                 	db	1
   106                           
   107                           ;initializer for Leds13@i
   108  007A65  01                 	db	1
   109                           
   110                           ;initializer for _frecuencia
   111  007A66  03E8               	dw	1000
   112                           
   113                           	psect	smallconst
   114  002018                     __psmallconst:
   115                           	opt callstack 0
   116  002018  00                 	db	0
   117  002019                     _teclas:
   118                           	opt callstack 0
   119  002019  01                 	db	1
   120  00201A  02                 	db	2
   121  00201B  03                 	db	3
   122  00201C  04                 	db	4
   123  00201D  05                 	db	5
   124  00201E  06                 	db	6
   125  00201F  07                 	db	7
   126  002020  08                 	db	8
   127  002021  09                 	db	9
   128  002022  2A                 	db	42
   129  002023  00                 	db	0
   130  002024  2B                 	db	43
   131  002025                     __end_of_teclas:
   132                           	opt callstack 0
   133  002025  20                 	db	32
   134  002026  20                 	db	32
   135  002027  20                 	db	32
   136  002028  2A                 	db	42
   137  002029  2A                 	db	42
   138  00202A  46                 	db	70	;'F'
   139  00202B  72                 	db	114	;'r'
   140  00202C  61                 	db	97	;'a'
   141  00202D  73                 	db	115	;'s'
   142  00202E  65                 	db	101	;'e'
   143  00202F  20                 	db	32
   144  002030  65                 	db	101	;'e'
   145  002031  73                 	db	115	;'s'
   146  002032  63                 	db	99	;'c'
   147  002033  6F                 	db	111	;'o'
   148  002034  6E                 	db	110	;'n'
   149  002035  64                 	db	100	;'d'
   150  002036  69                 	db	105	;'i'
   151  002037  64                 	db	100	;'d'
   152  002038  61                 	db	97	;'a'
   153  002039  20                 	db	32
   154  00203A  3A                 	db	58	;':'
   155  00203B  2D                 	db	45
   156  00203C  29                 	db	41
   157  00203D  20                 	db	32
   158  00203E  2A                 	db	42
   159  00203F  2A                 	db	42
   160  002040  00                 	db	0
   161  002041                     STR_3:
   162  002041  20                 	db	32
   163  002042  4C                 	db	76	;'L'
   164  002043  45                 	db	69	;'E'
   165  002044  44                 	db	68	;'D'
   166  002045  53                 	db	83	;'S'
   167  002046  20                 	db	32
   168  002047  41                 	db	65	;'A'
   169  002048  50                 	db	80	;'P'
   170  002049  41                 	db	65	;'A'
   171  00204A  47                 	db	71	;'G'
   172  00204B  41                 	db	65	;'A'
   173  00204C  44                 	db	68	;'D'
   174  00204D  4F                 	db	79	;'O'
   175  00204E  53                 	db	83	;'S'
   176  00204F  20                 	db	32
   177  002050  00                 	db	0
   178  002051                     STR_1:
   179  002051  4C                 	db	76	;'L'
   180  002052  45                 	db	69	;'E'
   181  002053  44                 	db	68	;'D'
   182  002054  31                 	db	49	;'1'
   183  002055  20                 	db	32
   184  002056  45                 	db	69	;'E'
   185  002057  4E                 	db	78	;'N'
   186  002058  43                 	db	67	;'C'
   187  002059  45                 	db	69	;'E'
   188  00205A  4E                 	db	78	;'N'
   189  00205B  44                 	db	68	;'D'
   190  00205C  49                 	db	73	;'I'
   191  00205D  44                 	db	68	;'D'
   192  00205E  4F                 	db	79	;'O'
   193  00205F  00                 	db	0
   194  002060                     STR_2:
   195  002060  4C                 	db	76	;'L'
   196  002061  45                 	db	69	;'E'
   197  002062  44                 	db	68	;'D'
   198  002063  32                 	db	50	;'2'
   199  002064  20                 	db	32
   200  002065  45                 	db	69	;'E'
   201  002066  4E                 	db	78	;'N'
   202  002067  43                 	db	67	;'C'
   203  002068  45                 	db	69	;'E'
   204  002069  4E                 	db	78	;'N'
   205  00206A  44                 	db	68	;'D'
   206  00206B  49                 	db	73	;'I'
   207  00206C  44                 	db	68	;'D'
   208  00206D  4F                 	db	79	;'O'
   209  00206E  00                 	db	0
   210  00206F  48                 	db	72	;'H'
   211  002070  6F                 	db	111	;'o'
   212  002071  6C                 	db	108	;'l'
   213  002072  61                 	db	97	;'a'
   214  002073  20                 	db	32
   215  002074  41                 	db	65	;'A'
   216  002075  6C                 	db	108	;'l'
   217  002076  75                 	db	117	;'u'
   218  002077  6D                 	db	109	;'m'
   219  002078  6E                 	db	110	;'n'
   220  002079  6F                 	db	111	;'o'
   221  00207A  73                 	db	115	;'s'
   222  00207B  00                 	db	0
   223  00207C  42                 	db	66	;'B'
   224  00207D  4F                 	db	79	;'O'
   225  00207E  54                 	db	84	;'T'
   226  00207F  31                 	db	49	;'1'
   227  002080  20                 	db	32
   228  002081  00                 	db	0
   229  002082  42                 	db	66	;'B'
   230  002083  4F                 	db	79	;'O'
   231  002084  54                 	db	84	;'T'
   232  002085  31                 	db	49	;'1'
   233  002086  00                 	db	0
   234  002087  42                 	db	66	;'B'
   235  002088  4F                 	db	79	;'O'
   236  002089  54                 	db	84	;'T'
   237  00208A  32                 	db	50	;'2'
   238  00208B  00                 	db	0
   239  00208C  42                 	db	66	;'B'
   240  00208D  4F                 	db	79	;'O'
   241  00208E  54                 	db	84	;'T'
   242  00208F  33                 	db	51	;'3'
   243  002090  00                 	db	0
   244  002091  42                 	db	66	;'B'
   245  002092  4F                 	db	79	;'O'
   246  002093  54                 	db	84	;'T'
   247  002094  34                 	db	52	;'4'
   248  002095  00                 	db	0
   249                           
   250                           ; #config settings
   251  002096  00                 	db	0	; dummy byte at the end
   252  0000                     
   253                           	psect	nvBANK0
   254  000064                     __pnvBANK0:
   255                           	opt callstack 0
   256  000064                     _LCD_tout:
   257                           	opt callstack 0
   258  000064                     	ds	2
   259  0000                     _PORTBbits	set	3969
   260  0000                     _INTCON3bits	set	4080
   261  0000                     _INTCON2bits	set	4081
   262  0000                     _TRISBbits	set	3987
   263  0000                     _EECON2	set	4007
   264  0000                     _EECON1bits	set	4006
   265  0000                     _EEDATA	set	4008
   266  0000                     _EEADR	set	4009
   267  0000                     _PORTB	set	3969
   268  0000                     _ADRESL	set	4035
   269  0000                     _ADRESH	set	4036
   270  0000                     _ADCON0bits	set	4034
   271  0000                     _ADCON2	set	4032
   272  0000                     _TRISAbits	set	3986
   273  0000                     _PORTA	set	3968
   274  0000                     _TXREG	set	4013
   275  0000                     _T2CONbits	set	4042
   276  0000                     _CCP1CONbits	set	4029
   277  0000                     _CCPR1L	set	4030
   278  0000                     _PR2	set	4043
   279  0000                     _RCREG	set	4014
   280  0000                     _RCSTAbits	set	4011
   281  0000                     _SPBRGH	set	4016
   282  0000                     _SPBRG	set	4015
   283  0000                     _BAUDCONbits	set	4024
   284  0000                     _TXSTAbits	set	4012
   285  0000                     _PIE1bits	set	3997
   286  0000                     _PIR1bits	set	3998
   287  0000                     _T1CONbits	set	4045
   288  0000                     _T0CONbits	set	4053
   289  0000                     _TRISC	set	3988
   290  0000                     _LATEbits	set	3981
   291  0000                     _LATAbits	set	3977
   292  0000                     _LATCbits	set	3979
   293  0000                     _TRISB	set	3987
   294  0000                     _TRISE	set	3990
   295  0000                     _TRISA	set	3986
   296  0000                     _ADCON1	set	4033
   297  0000                     _CMCON	set	4020
   298  0000                     _TRISCbits	set	3988
   299  0000                     _LATE	set	3981
   300  0000                     _LATC	set	3979
   301  0000                     _LATB	set	3978
   302  0000                     _LATA	set	3977
   303  0000                     _PORTDbits	set	3971
   304  0000                     _LATD	set	3980
   305  0000                     _PORTEbits	set	3972
   306  0000                     _TRISEbits	set	3990
   307  0000                     _TRISD	set	3989
   308  0000                     _LATDbits	set	3980
   309  0000                     _TMR1H	set	4047
   310  0000                     _TMR1L	set	4046
   311  0000                     _TMR0H	set	4055
   312  0000                     _TMR0L	set	4054
   313  0000                     _INTCONbits	set	4082
   314  0000                     _TRISDbits	set	3989
   315  0000                     _RBIE	set	32659
   316  0000                     _RBIP	set	32648
   317  0000                     _RBPU	set	32655
   318  0000                     _INT1IE	set	32643
   319  0000                     _INT1IF	set	32640
   320  0000                     _INT0IF	set	32657
   321  0000                     _INT0IE	set	32660
   322  0000                     _RBIF	set	32656
   323  0000                     _TMR1IF	set	31984
   324  0000                     _TMR0IF	set	32658
   325  0000                     _TMR1ON	set	32360
   326  0000                     _TMR0ON	set	32431
   327                           
   328                           	psect	cinit
   329  007B86                     __pcinit:
   330                           	opt callstack 0
   331  007B86                     start_initialization:
   332                           	opt callstack 0
   333  007B86                     __initialization:
   334                           	opt callstack 0
   335                           
   336                           ; Initialize objects allocated to COMRAM (22 bytes)
   337                           ; load TBLPTR registers with __pidataCOMRAM
   338  007B86  0E52               	movlw	low __pidataCOMRAM
   339  007B88  6EF6               	movwf	tblptrl,c
   340  007B8A  0E7A               	movlw	high __pidataCOMRAM
   341  007B8C  6EF7               	movwf	tblptrh,c
   342  007B8E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   343  007B90  6EF8               	movwf	tblptru,c
   344  007B92  EE00  F049         	lfsr	0,__pdataCOMRAM
   345  007B96  EE10 F016          	lfsr	1,22
   346  007B9A                     copy_data0:
   347  007B9A  0009               	tblrd		*+
   348  007B9C  CFF5 FFEE          	movff	tablat,postinc0
   349  007BA0  50E5               	movf	postdec1,w,c
   350  007BA2  50E1               	movf	fsr1l,w,c
   351  007BA4  E1FA               	bnz	copy_data0
   352                           
   353                           ; Clear objects allocated to BANK0 (4 bytes)
   354  007BA6  0100               	movlb	0
   355  007BA8  6B63               	clrf	(__pbssBANK0+3)& (0+255),b
   356  007BAA  6B62               	clrf	(__pbssBANK0+2)& (0+255),b
   357  007BAC  6B61               	clrf	(__pbssBANK0+1)& (0+255),b
   358  007BAE  6B60               	clrf	__pbssBANK0& (0+255),b
   359                           
   360                           ; Clear objects allocated to COMRAM (46 bytes)
   361  007BB0  EE00  F001         	lfsr	0,__pbssCOMRAM
   362  007BB4  0E2E               	movlw	46
   363  007BB6                     clear_0:
   364  007BB6  6AEE               	clrf	postinc0,c
   365  007BB8  06E8               	decf	wreg,f,c
   366  007BBA  E1FD               	bnz	clear_0
   367  007BBC                     end_of_initialization:
   368                           	opt callstack 0
   369  007BBC                     __end_of__initialization:
   370                           	opt callstack 0
   371  007BBC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   372  007BBE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   373  007BC0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   374  007BC2  6EF8               	movwf	tblptru,c
   375  007BC4  0100               	movlb	0
   376  007BC6  EF61  F03D         	goto	_main	;jump to C main() function
   377                           
   378                           	psect	bssCOMRAM
   379  000001                     __pbssCOMRAM:
   380                           	opt callstack 0
   381  000001                     _activador_off:
   382                           	opt callstack 0
   383  000001                     	ds	4
   384  000005                     _activador_on:
   385                           	opt callstack 0
   386  000005                     	ds	4
   387  000009                     _activador_tiempo_ventana_peso:
   388                           	opt callstack 0
   389  000009                     	ds	4
   390  00000D                     _desplazar_tout:
   391                           	opt callstack 0
   392  00000D                     	ds	2
   393  00000F                     _MedioPeriodoSet:
   394                           	opt callstack 0
   395  00000F                     	ds	2
   396  000011                     _led_tout:
   397                           	opt callstack 0
   398  000011                     	ds	2
   399  000013                     tecla@status_KB:
   400                           	opt callstack 0
   401  000013                     	ds	1
   402  000014                     _delay_kb:
   403                           	opt callstack 0
   404  000014                     	ds	1
   405  000015                     _flag_kb:
   406                           	opt callstack 0
   407  000015                     	ds	1
   408  000016                     _flagCanal:
   409                           	opt callstack 0
   410  000016                     	ds	1
   411  000017                     _encoderTout:
   412                           	opt callstack 0
   413  000017                     	ds	1
   414  000018                     _posicionEncoder:
   415                           	opt callstack 0
   416  000018                     	ds	1
   417  000019                     _minimoEncoder:
   418                           	opt callstack 0
   419  000019                     	ds	1
   420  00001A                     _maximoEncoder:
   421                           	opt callstack 0
   422  00001A                     	ds	1
   423  00001B                     demo_shield2_1@cont3:
   424                           	opt callstack 0
   425  00001B                     	ds	1
   426  00001C                     demo_shield2_1@cont2:
   427                           	opt callstack 0
   428  00001C                     	ds	1
   429  00001D                     demo_shield2_1@cont1:
   430                           	opt callstack 0
   431  00001D                     	ds	1
   432  00001E                     demo_shield2_1@cont:
   433                           	opt callstack 0
   434  00001E                     	ds	1
   435  00001F                     demo_shield2_1@Desplazar:
   436                           	opt callstack 0
   437  00001F                     	ds	1
   438  000020                     demo_shield2_1@PrimeraVez:
   439                           	opt callstack 0
   440  000020                     	ds	1
   441  000021                     demo_shield2_1@flag3:
   442                           	opt callstack 0
   443  000021                     	ds	1
   444  000022                     demo_shield2_1@flag2:
   445                           	opt callstack 0
   446  000022                     	ds	1
   447  000023                     demo_shield2_1@flag1:
   448                           	opt callstack 0
   449  000023                     	ds	1
   450  000024                     demo_shield2_1@flag0:
   451                           	opt callstack 0
   452  000024                     	ds	1
   453  000025                     debounce@cnt1:
   454                           	opt callstack 0
   455  000025                     	ds	1
   456  000026                     debounce@cnt0:
   457                           	opt callstack 0
   458  000026                     	ds	1
   459  000027                     debounce@state:
   460                           	opt callstack 0
   461  000027                     	ds	1
   462  000028                     _MultiplicadorSet:
   463                           	opt callstack 0
   464  000028                     	ds	1
   465  000029                     _Multiplicador:
   466                           	opt callstack 0
   467  000029                     	ds	1
   468  00002A                     _LowerByte:
   469                           	opt callstack 0
   470  00002A                     	ds	1
   471  00002B                     Botones13@Estado_BOT:
   472                           	opt callstack 0
   473  00002B                     	ds	1
   474  00002C                     _bot_tout:
   475                           	opt callstack 0
   476  00002C                     	ds	1
   477  00002D                     _mux_tout:
   478                           	opt callstack 0
   479  00002D                     	ds	1
   480  00002E                     _EstadoDeLosBotones:
   481                           	opt callstack 0
   482  00002E                     	ds	1
   483                           
   484                           	psect	dataCOMRAM
   485  000049                     __pdataCOMRAM:
   486                           	opt callstack 0
   487  000049                     _tiempo_parpadeo_off:
   488                           	opt callstack 0
   489  000049                     	ds	4
   490  00004D                     _tiempo_parpadeo_on:
   491                           	opt callstack 0
   492  00004D                     	ds	4
   493  000051                     _tiempo_ventana_peso:
   494                           	opt callstack 0
   495  000051                     	ds	4
   496  000055                     _col:
   497                           	opt callstack 0
   498  000055                     	ds	1
   499  000056                     _fila:
   500                           	opt callstack 0
   501  000056                     	ds	1
   502  000057                     tic_encoder@estado:
   503                           	opt callstack 0
   504  000057                     	ds	1
   505  000058                     tic_debounce@debounce_tic:
   506                           	opt callstack 0
   507  000058                     	ds	1
   508  000059                     _OffsetPeriodo:
   509                           	opt callstack 0
   510  000059                     	ds	1
   511  00005A                     _UpperByte:
   512                           	opt callstack 0
   513  00005A                     	ds	1
   514  00005B                     Send4Disp@Nro_Disp:
   515                           	opt callstack 0
   516  00005B                     	ds	1
   517  00005C                     Leds13@i:
   518                           	opt callstack 0
   519  00005C                     	ds	1
   520  00005D                     _frecuencia:
   521                           	opt callstack 0
   522  00005D                     	ds	2
   523                           
   524                           	psect	bssBANK0
   525  000060                     __pbssBANK0:
   526                           	opt callstack 0
   527  000060                     _casos_parpadeo:
   528                           	opt callstack 0
   529  000060                     	ds	4
   530                           
   531                           	psect	cstackCOMRAM
   532  00002F                     __pcstackCOMRAM:
   533                           	opt callstack 0
   534  00002F                     write_LCD@dato:
   535                           	opt callstack 0
   536                           
   537                           ; 1 bytes @ 0x0
   538  00002F                     	ds	1
   539  000030                     write_DATA@dato:
   540                           	opt callstack 0
   541  000030                     write_CMD@dato:
   542                           	opt callstack 0
   543                           
   544                           ; 1 bytes @ 0x1
   545  000030                     	ds	1
   546  000031                     set_CURSOR@posi:
   547                           	opt callstack 0
   548  000031                     msg2LCD@datos:
   549                           	opt callstack 0
   550  000031                     clear_LCD@i:
   551                           	opt callstack 0
   552  000031                     LCD_init@i:
   553                           	opt callstack 0
   554                           
   555                           ; 4 bytes @ 0x2
   556  000031                     	ds	1
   557  000032                     set_CURSOR@i:
   558                           	opt callstack 0
   559                           
   560                           ; 4 bytes @ 0x3
   561  000032                     	ds	1
   562  000033                     msg2LCD@i:
   563                           	opt callstack 0
   564                           
   565                           ; 4 bytes @ 0x4
   566  000033                     	ds	2
   567  000035                     LCD_init@i_434:
   568                           	opt callstack 0
   569                           
   570                           ; 4 bytes @ 0x6
   571  000035                     	ds	2
   572  000037                     ??_parpadeoLed:
   573                           
   574                           ; 1 bytes @ 0x8
   575  000037                     	ds	2
   576  000039                     LCD_init@i_435:
   577                           	opt callstack 0
   578                           
   579                           ; 4 bytes @ 0xA
   580  000039                     	ds	4
   581  00003D                     LCD_init@i_436:
   582                           	opt callstack 0
   583                           
   584                           ; 4 bytes @ 0xE
   585  00003D                     	ds	4
   586  000041                     LCD_init@i_437:
   587                           	opt callstack 0
   588                           
   589                           ; 4 bytes @ 0x12
   590  000041                     	ds	4
   591  000045                     LCD_init@i_438:
   592                           	opt callstack 0
   593                           
   594                           ; 4 bytes @ 0x16
   595  000045                     	ds	4
   596  000049                     
   597                           ; 1 bytes @ 0x1A
   598 ;;
   599 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   600 ;;
   601 ;; *************** function _main *****************
   602 ;; Defined at:
   603 ;;		line 35 in file "main.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   617 ;;      Params:         0       0       0       0       0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0       0       0
   620 ;;      Totals:         0       0       0       0       0       0       0       0       0
   621 ;;Total ram usage:        0 bytes
   622 ;; Hardware stack levels required when called:    6
   623 ;; This function calls:
   624 ;;		_LCD_init
   625 ;;		_PicIni21
   626 ;;		_TIMER0_INI
   627 ;;		_TIMER1_INI
   628 ;;		_parpadeoLed
   629 ;;		_tecladoIni13
   630 ;; This function is called by:
   631 ;;		Startup code after reset
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text0
   636  007AC2                     __ptext0:
   637                           	opt callstack 0
   638  007AC2                     _main:
   639                           	opt callstack 25
   640                           
   641                           ;main.c: 37: PicIni21();
   642                           
   643                           ;incstack = 0
   644  007AC2  EC73  F03D         	call	_PicIni21	;wreg free
   645                           
   646                           ;main.c: 39: TRISDbits.RD1 = 0;
   647  007AC6  9295               	bcf	3989,1,c	;volatile
   648                           
   649                           ;main.c: 40: TRISDbits.RD0 = 0;
   650  007AC8  9095               	bcf	3989,0,c	;volatile
   651                           
   652                           ;main.c: 42: TIMER0_INI();
   653  007ACA  EC34  F03D         	call	_TIMER0_INI	;wreg free
   654                           
   655                           ;main.c: 43: TMR0ON = 1;
   656  007ACE  8ED5               	bsf	4053,7,c	;volatile
   657                           
   658                           ;main.c: 44: TIMER1_INI();
   659  007AD0  EC51  F03D         	call	_TIMER1_INI	;wreg free
   660                           
   661                           ;main.c: 45: TMR1ON = 1;
   662  007AD4  80CD               	bsf	4045,0,c	;volatile
   663                           
   664                           ;main.c: 46: (INTCONbits.GIE = 1);
   665  007AD6  8EF2               	bsf	4082,7,c	;volatile
   666                           
   667                           ;main.c: 47: tecladoIni13();
   668  007AD8  EC1E  F03D         	call	_tecladoIni13	;wreg free
   669                           
   670                           ;main.c: 49: LCD_init();
   671  007ADC  EC66  F03E         	call	_LCD_init	;wreg free
   672  007AE0                     l2900:
   673                           
   674                           ;main.c: 56: parpadeoLed();
   675  007AE0  EC2A  F03F         	call	_parpadeoLed	;wreg free
   676  007AE4  D7FD               	goto	l2900
   677  007AE6                     __end_of_main:
   678                           	opt callstack 0
   679                           
   680 ;; *************** function _tecladoIni13 *****************
   681 ;; Defined at:
   682 ;;		line 42 in file "teclado.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   696 ;;      Params:         0       0       0       0       0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    2
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text1
   711  007A3C                     __ptext1:
   712                           	opt callstack 0
   713  007A3C                     _tecladoIni13:
   714                           	opt callstack 28
   715                           
   716                           ;teclado.c: 44: LATB = 0;
   717                           
   718                           ;incstack = 0
   719  007A3C  0E00               	movlw	0
   720  007A3E  6E8A               	movwf	3978,c	;volatile
   721                           
   722                           ;teclado.c: 45: PORTB = 0;
   723  007A40  0E00               	movlw	0
   724  007A42  6E81               	movwf	3969,c	;volatile
   725                           
   726                           ;teclado.c: 46: TRISB = 0xF0;
   727  007A44  0EF0               	movlw	240
   728  007A46  6E93               	movwf	3987,c	;volatile
   729                           
   730                           ;teclado.c: 47: RBPU = 0;
   731  007A48  9EF1               	bcf	4081,7,c	;volatile
   732                           
   733                           ;teclado.c: 48: RBIP = 1;
   734  007A4A  80F1               	bsf	4081,0,c	;volatile
   735                           
   736                           ;teclado.c: 49: RBIF = 0;
   737  007A4C  90F2               	bcf	4082,0,c	;volatile
   738                           
   739                           ;teclado.c: 50: RBIE = 1;
   740  007A4E  86F2               	bsf	4082,3,c	;volatile
   741  007A50  0012               	return		;funcret
   742  007A52                     __end_of_tecladoIni13:
   743                           	opt callstack 0
   744                           
   745 ;; *************** function _parpadeoLed *****************
   746 ;; Defined at:
   747 ;;		line 110 in file "main.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   761 ;;      Params:         0       0       0       0       0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0       0       0       0       0
   763 ;;      Temps:          4       0       0       0       0       0       0       0       0
   764 ;;      Totals:         4       0       0       0       0       0       0       0       0
   765 ;;Total ram usage:        4 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    5
   768 ;; This function calls:
   769 ;;		_clear_LCD
   770 ;;		_msg2LCD
   771 ;;		_set_CURSOR
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text2
   778  007E54                     __ptext2:
   779                           	opt callstack 0
   780  007E54                     _parpadeoLed:
   781                           	opt callstack 25
   782                           
   783                           ;main.c: 112: if (tiempo_ventana_peso != 0) {
   784                           
   785                           ;incstack = 0
   786  007E54  5051               	movf	_tiempo_ventana_peso,w,c
   787  007E56  1052               	iorwf	_tiempo_ventana_peso+1,w,c
   788  007E58  1053               	iorwf	_tiempo_ventana_peso+2,w,c
   789  007E5A  1054               	iorwf	_tiempo_ventana_peso+3,w,c
   790  007E5C  B4D8               	btfsc	status,2,c
   791  007E5E  D0B6               	goto	l2828
   792                           
   793                           ;main.c: 113: activador_tiempo_ventana_peso = 1;
   794  007E60  0E01               	movlw	1
   795  007E62  6E09               	movwf	_activador_tiempo_ventana_peso,c
   796  007E64  0E00               	movlw	0
   797  007E66  6E0A               	movwf	_activador_tiempo_ventana_peso+1,c
   798  007E68  0E00               	movlw	0
   799  007E6A  6E0B               	movwf	_activador_tiempo_ventana_peso+2,c
   800  007E6C  0E00               	movlw	0
   801  007E6E  6E0C               	movwf	_activador_tiempo_ventana_peso+3,c
   802                           
   803                           ;main.c: 114: switch (casos_parpadeo) {
   804  007E70  D08A               	goto	l2826
   805  007E72                     l2772:
   806                           
   807                           ;main.c: 116: {;main.c: 117: if (tiempo_parpadeo_on != 0) {
   808  007E72  504D               	movf	_tiempo_parpadeo_on,w,c
   809  007E74  104E               	iorwf	_tiempo_parpadeo_on+1,w,c
   810  007E76  104F               	iorwf	_tiempo_parpadeo_on+2,w,c
   811  007E78  1050               	iorwf	_tiempo_parpadeo_on+3,w,c
   812  007E7A  B4D8               	btfsc	status,2,c
   813  007E7C  D012               	goto	l2782
   814                           
   815                           ;main.c: 119: activador_on = 1;
   816  007E7E  0E01               	movlw	1
   817  007E80  6E05               	movwf	_activador_on,c
   818  007E82  0E00               	movlw	0
   819  007E84  6E06               	movwf	_activador_on+1,c
   820  007E86  0E00               	movlw	0
   821  007E88  6E07               	movwf	_activador_on+2,c
   822  007E8A  0E00               	movlw	0
   823  007E8C  6E08               	movwf	_activador_on+3,c
   824                           
   825                           ;main.c: 120: LATDbits.LD1 = 1;
   826  007E8E  828C               	bsf	3980,1,c	;volatile
   827                           
   828                           ;main.c: 121: set_CURSOR(0x01);
   829  007E90  0E01               	movlw	1
   830  007E92  ECA5  F03D         	call	_set_CURSOR
   831                           
   832                           ;main.c: 122: msg2LCD("LED1 ENCENDIDO");
   833  007E96  0E51               	movlw	low STR_1
   834  007E98  6E31               	movwf	msg2LCD@datos,c
   835  007E9A  0E20               	movlw	high STR_1
   836  007E9C  6E32               	movwf	msg2LCD@datos+1,c
   837  007E9E  ECE5  F03D         	call	_msg2LCD	;wreg free
   838  007EA2                     l2782:
   839                           
   840                           ;main.c: 124: };main.c: 125: if (tiempo_parpadeo_on == 0) {
   841  007EA2  504D               	movf	_tiempo_parpadeo_on,w,c
   842  007EA4  104E               	iorwf	_tiempo_parpadeo_on+1,w,c
   843  007EA6  104F               	iorwf	_tiempo_parpadeo_on+2,w,c
   844  007EA8  1050               	iorwf	_tiempo_parpadeo_on+3,w,c
   845  007EAA  A4D8               	btfss	status,2,c
   846  007EAC  D08F               	goto	l2828
   847                           
   848                           ;main.c: 126: activador_on = 0;
   849  007EAE  0E00               	movlw	0
   850  007EB0  6E05               	movwf	_activador_on,c
   851  007EB2  0E00               	movlw	0
   852  007EB4  6E06               	movwf	_activador_on+1,c
   853  007EB6  0E00               	movlw	0
   854  007EB8  6E07               	movwf	_activador_on+2,c
   855  007EBA  0E00               	movlw	0
   856  007EBC  6E08               	movwf	_activador_on+3,c
   857                           
   858                           ;main.c: 127: clear_LCD();
   859  007EBE  EC89  F03D         	call	_clear_LCD	;wreg free
   860                           
   861                           ;main.c: 128: casos_parpadeo = 1;
   862  007EC2  0E01               	movlw	1
   863  007EC4  D057               	goto	L2
   864  007EC6                     l2790:
   865                           
   866                           ;main.c: 133: {;main.c: 134: if (tiempo_parpadeo_on == 0) {
   867  007EC6  504D               	movf	_tiempo_parpadeo_on,w,c
   868  007EC8  104E               	iorwf	_tiempo_parpadeo_on+1,w,c
   869  007ECA  104F               	iorwf	_tiempo_parpadeo_on+2,w,c
   870  007ECC  1050               	iorwf	_tiempo_parpadeo_on+3,w,c
   871  007ECE  A4D8               	btfss	status,2,c
   872  007ED0  D07D               	goto	l2828
   873                           
   874                           ;main.c: 135: LATDbits.LD1 = 0;
   875  007ED2  928C               	bcf	3980,1,c	;volatile
   876                           
   877                           ;main.c: 136: clear_LCD();
   878  007ED4  EC89  F03D         	call	_clear_LCD	;wreg free
   879                           
   880                           ;main.c: 137: tiempo_parpadeo_on = 3;
   881  007ED8  0E03               	movlw	3
   882  007EDA  6E4D               	movwf	_tiempo_parpadeo_on,c
   883  007EDC  0E00               	movlw	0
   884  007EDE  6E4E               	movwf	_tiempo_parpadeo_on+1,c
   885  007EE0  0E00               	movlw	0
   886  007EE2  6E4F               	movwf	_tiempo_parpadeo_on+2,c
   887  007EE4  0E00               	movlw	0
   888  007EE6  6E50               	movwf	_tiempo_parpadeo_on+3,c
   889                           
   890                           ;main.c: 138: casos_parpadeo=2;
   891  007EE8  0E02               	movlw	2
   892  007EEA  D044               	goto	L2
   893  007EEC                     l2800:
   894                           
   895                           ;main.c: 144: {;main.c: 145: if(tiempo_parpadeo_off!=0){
   896  007EEC  5049               	movf	_tiempo_parpadeo_off,w,c
   897  007EEE  104A               	iorwf	_tiempo_parpadeo_off+1,w,c
   898  007EF0  104B               	iorwf	_tiempo_parpadeo_off+2,w,c
   899  007EF2  104C               	iorwf	_tiempo_parpadeo_off+3,w,c
   900  007EF4  B4D8               	btfsc	status,2,c
   901  007EF6  D012               	goto	l2810
   902                           
   903                           ;main.c: 146: activador_off=1;
   904  007EF8  0E01               	movlw	1
   905  007EFA  6E01               	movwf	_activador_off,c
   906  007EFC  0E00               	movlw	0
   907  007EFE  6E02               	movwf	_activador_off+1,c
   908  007F00  0E00               	movlw	0
   909  007F02  6E03               	movwf	_activador_off+2,c
   910  007F04  0E00               	movlw	0
   911  007F06  6E04               	movwf	_activador_off+3,c
   912                           
   913                           ;main.c: 147: LATDbits.LD0=1;
   914  007F08  808C               	bsf	3980,0,c	;volatile
   915                           
   916                           ;main.c: 148: set_CURSOR(0x01);
   917  007F0A  0E01               	movlw	1
   918  007F0C  ECA5  F03D         	call	_set_CURSOR
   919                           
   920                           ;main.c: 149: msg2LCD("LED2 ENCENDIDO");
   921  007F10  0E60               	movlw	low STR_2
   922  007F12  6E31               	movwf	msg2LCD@datos,c
   923  007F14  0E20               	movlw	high STR_2
   924  007F16  6E32               	movwf	msg2LCD@datos+1,c
   925  007F18  ECE5  F03D         	call	_msg2LCD	;wreg free
   926  007F1C                     l2810:
   927                           
   928                           ;main.c: 151: };main.c: 152: if(tiempo_parpadeo_off==0){
   929  007F1C  5049               	movf	_tiempo_parpadeo_off,w,c
   930  007F1E  104A               	iorwf	_tiempo_parpadeo_off+1,w,c
   931  007F20  104B               	iorwf	_tiempo_parpadeo_off+2,w,c
   932  007F22  104C               	iorwf	_tiempo_parpadeo_off+3,w,c
   933  007F24  A4D8               	btfss	status,2,c
   934  007F26  D052               	goto	l2828
   935                           
   936                           ;main.c: 153: activador_off=0;
   937  007F28  0E00               	movlw	0
   938  007F2A  6E01               	movwf	_activador_off,c
   939  007F2C  0E00               	movlw	0
   940  007F2E  6E02               	movwf	_activador_off+1,c
   941  007F30  0E00               	movlw	0
   942  007F32  6E03               	movwf	_activador_off+2,c
   943  007F34  0E00               	movlw	0
   944  007F36  6E04               	movwf	_activador_off+3,c
   945                           
   946                           ;main.c: 154: casos_parpadeo=3;
   947  007F38  0E03               	movlw	3
   948  007F3A  0100               	movlb	0	; () banked
   949  007F3C  6F60               	movwf	_casos_parpadeo& (0+255),b
   950  007F3E  0E00               	movlw	0
   951  007F40  6F61               	movwf	(_casos_parpadeo+1)& (0+255),b
   952  007F42  0E00               	movlw	0
   953  007F44  6F62               	movwf	(_casos_parpadeo+2)& (0+255),b
   954  007F46  0E00               	movlw	0
   955  007F48  6F63               	movwf	(_casos_parpadeo+3)& (0+255),b
   956                           
   957                           ; BSR set to: 0
   958                           ;main.c: 155: clear_LCD();
   959  007F4A  EC89  F03D         	call	_clear_LCD	;wreg free
   960  007F4E  D03E               	goto	l2828
   961  007F50                     l2816:
   962                           
   963                           ;main.c: 161: {;main.c: 162: if (tiempo_parpadeo_off == 0) {
   964  007F50  5049               	movf	_tiempo_parpadeo_off,w,c
   965  007F52  104A               	iorwf	_tiempo_parpadeo_off+1,w,c
   966  007F54  104B               	iorwf	_tiempo_parpadeo_off+2,w,c
   967  007F56  104C               	iorwf	_tiempo_parpadeo_off+3,w,c
   968  007F58  A4D8               	btfss	status,2,c
   969  007F5A  D038               	goto	l2828
   970                           
   971                           ;main.c: 163: LATDbits.LD0 = 0;
   972  007F5C  908C               	bcf	3980,0,c	;volatile
   973                           
   974                           ;main.c: 164: clear_LCD();
   975  007F5E  EC89  F03D         	call	_clear_LCD	;wreg free
   976                           
   977                           ;main.c: 165: tiempo_parpadeo_off = 3;
   978  007F62  0E03               	movlw	3
   979  007F64  6E49               	movwf	_tiempo_parpadeo_off,c
   980  007F66  0E00               	movlw	0
   981  007F68  6E4A               	movwf	_tiempo_parpadeo_off+1,c
   982  007F6A  0E00               	movlw	0
   983  007F6C  6E4B               	movwf	_tiempo_parpadeo_off+2,c
   984  007F6E  0E00               	movlw	0
   985  007F70  6E4C               	movwf	_tiempo_parpadeo_off+3,c
   986                           
   987                           ;main.c: 166: casos_parpadeo=0;
   988  007F72  0E00               	movlw	0
   989  007F74                     L2:
   990  007F74  0100               	movlb	0	; () banked
   991  007F76  6F60               	movwf	_casos_parpadeo& (0+255),b
   992  007F78  0E00               	movlw	0
   993  007F7A  6F61               	movwf	(_casos_parpadeo+1)& (0+255),b
   994  007F7C  0E00               	movlw	0
   995  007F7E  6F62               	movwf	(_casos_parpadeo+2)& (0+255),b
   996  007F80  0E00               	movlw	0
   997  007F82  6F63               	movwf	(_casos_parpadeo+3)& (0+255),b
   998  007F84  D023               	goto	l2828
   999  007F86                     l2826:
  1000  007F86  C060  F037         	movff	_casos_parpadeo,??_parpadeoLed
  1001  007F8A  C061  F038         	movff	_casos_parpadeo+1,??_parpadeoLed+1
  1002  007F8E  C062  F039         	movff	_casos_parpadeo+2,??_parpadeoLed+2
  1003  007F92  C063  F03A         	movff	_casos_parpadeo+3,??_parpadeoLed+3
  1004                           
  1005                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1006                           ; Switch size 1, requested type "simple"
  1007                           ; Number of cases is 1, Range of values is 0 to 0
  1008                           ; switch strategies available:
  1009                           ; Name         Instructions Cycles
  1010                           ; simple_byte            4     3 (average)
  1011                           ;	Chosen strategy is simple_byte
  1012  007F96  503A               	movf	??_parpadeoLed+3,w,c
  1013  007F98  0A00               	xorlw	0	; case 0
  1014  007F9A  B4D8               	btfsc	status,2,c
  1015  007F9C  D013               	goto	l3196
  1016  007F9E  D016               	goto	l2828
  1017  007FA0                     l3194:
  1018                           
  1019                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1020                           ; Switch size 1, requested type "simple"
  1021                           ; Number of cases is 1, Range of values is 0 to 0
  1022                           ; switch strategies available:
  1023                           ; Name         Instructions Cycles
  1024                           ; simple_byte            4     3 (average)
  1025                           ;	Chosen strategy is simple_byte
  1026  007FA0  5038               	movf	??_parpadeoLed+1,w,c
  1027  007FA2  0A00               	xorlw	0	; case 0
  1028  007FA4  A4D8               	btfss	status,2,c
  1029  007FA6  D012               	goto	l2828
  1030                           
  1031                           ; Switch size 1, requested type "simple"
  1032                           ; Number of cases is 4, Range of values is 0 to 3
  1033                           ; switch strategies available:
  1034                           ; Name         Instructions Cycles
  1035                           ; simple_byte           13     7 (average)
  1036                           ;	Chosen strategy is simple_byte
  1037  007FA8  5037               	movf	??_parpadeoLed,w,c
  1038  007FAA  0A00               	xorlw	0	; case 0
  1039  007FAC  B4D8               	btfsc	status,2,c
  1040  007FAE  D761               	goto	l2772
  1041  007FB0  0A01               	xorlw	1	; case 1
  1042  007FB2  B4D8               	btfsc	status,2,c
  1043  007FB4  D788               	goto	l2790
  1044  007FB6  0A03               	xorlw	3	; case 2
  1045  007FB8  B4D8               	btfsc	status,2,c
  1046  007FBA  D798               	goto	l2800
  1047  007FBC  0A01               	xorlw	1	; case 3
  1048  007FBE  B4D8               	btfsc	status,2,c
  1049  007FC0  D7C7               	goto	l2816
  1050  007FC2  D004               	goto	l2828
  1051  007FC4                     l3196:
  1052                           
  1053                           ; Switch size 1, requested type "simple"
  1054                           ; Number of cases is 1, Range of values is 0 to 0
  1055                           ; switch strategies available:
  1056                           ; Name         Instructions Cycles
  1057                           ; simple_byte            4     3 (average)
  1058                           ;	Chosen strategy is simple_byte
  1059  007FC4  5039               	movf	??_parpadeoLed+2,w,c
  1060  007FC6  0A00               	xorlw	0	; case 0
  1061  007FC8  B4D8               	btfsc	status,2,c
  1062  007FCA  D7EA               	goto	l3194
  1063  007FCC                     l2828:
  1064                           
  1065                           ;main.c: 171: };main.c: 172: if(tiempo_ventana_peso==0){
  1066  007FCC  5051               	movf	_tiempo_ventana_peso,w,c
  1067  007FCE  1052               	iorwf	_tiempo_ventana_peso+1,w,c
  1068  007FD0  1053               	iorwf	_tiempo_ventana_peso+2,w,c
  1069  007FD2  1054               	iorwf	_tiempo_ventana_peso+3,w,c
  1070  007FD4  A4D8               	btfss	status,2,c
  1071  007FD6  0012               	return	
  1072                           
  1073                           ;main.c: 173: activador_tiempo_ventana_peso=0;
  1074  007FD8  0E00               	movlw	0
  1075  007FDA  6E09               	movwf	_activador_tiempo_ventana_peso,c
  1076  007FDC  0E00               	movlw	0
  1077  007FDE  6E0A               	movwf	_activador_tiempo_ventana_peso+1,c
  1078  007FE0  0E00               	movlw	0
  1079  007FE2  6E0B               	movwf	_activador_tiempo_ventana_peso+2,c
  1080  007FE4  0E00               	movlw	0
  1081  007FE6  6E0C               	movwf	_activador_tiempo_ventana_peso+3,c
  1082                           
  1083                           ;main.c: 174: LATDbits.LD1=0;
  1084  007FE8  928C               	bcf	3980,1,c	;volatile
  1085                           
  1086                           ;main.c: 175: LATDbits.LD0=0;
  1087  007FEA  908C               	bcf	3980,0,c	;volatile
  1088                           
  1089                           ;main.c: 176: set_CURSOR(0x01);
  1090  007FEC  0E01               	movlw	1
  1091  007FEE  ECA5  F03D         	call	_set_CURSOR
  1092                           
  1093                           ;main.c: 177: msg2LCD(" LEDS APAGADOS ");
  1094  007FF2  0E41               	movlw	low STR_3
  1095  007FF4  6E31               	movwf	msg2LCD@datos,c
  1096  007FF6  0E20               	movlw	high STR_3
  1097  007FF8  6E32               	movwf	msg2LCD@datos+1,c
  1098  007FFA  ECE5  F03D         	call	_msg2LCD	;wreg free
  1099  007FFE  0012               	return		;funcret
  1100  008000                     __end_of_parpadeoLed:
  1101                           	opt callstack 0
  1102                           
  1103 ;; *************** function _set_CURSOR *****************
  1104 ;; Defined at:
  1105 ;;		line 64 in file "lcd.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  posi            1    wreg     unsigned char 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  posi            1    2[COMRAM] unsigned char 
  1110 ;;  i               4    3[COMRAM] unsigned long 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0
  1121 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1123 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1124 ;;Total ram usage:        5 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    4
  1127 ;; This function calls:
  1128 ;;		_write_CMD
  1129 ;; This function is called by:
  1130 ;;		_parpadeoLed
  1131 ;;		_demo_shield2_1
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text3
  1136  007B4A                     __ptext3:
  1137                           	opt callstack 0
  1138  007B4A                     _set_CURSOR:
  1139                           	opt callstack 25
  1140                           
  1141                           ;incstack = 0
  1142                           ;set_CURSOR@posi stored from wreg
  1143  007B4A  6E31               	movwf	set_CURSOR@posi,c
  1144                           
  1145                           ;lcd.c: 65: posi |= 0x80;
  1146  007B4C  8E31               	bsf	set_CURSOR@posi,7,c
  1147                           
  1148                           ;lcd.c: 66: write_CMD(posi);
  1149  007B4E  5031               	movf	set_CURSOR@posi,w,c
  1150  007B50  EC0E  F03D         	call	_write_CMD
  1151                           
  1152                           ;lcd.c: 68: for (unsigned long i = 0; i < 10000; i++);
  1153  007B54  0E00               	movlw	0
  1154  007B56  6E32               	movwf	set_CURSOR@i,c
  1155  007B58  0E00               	movlw	0
  1156  007B5A  6E33               	movwf	set_CURSOR@i+1,c
  1157  007B5C  0E00               	movlw	0
  1158  007B5E  6E34               	movwf	set_CURSOR@i+2,c
  1159  007B60  0E00               	movlw	0
  1160  007B62  6E35               	movwf	set_CURSOR@i+3,c
  1161  007B64                     l2664:
  1162  007B64  0E01               	movlw	1
  1163  007B66  2632               	addwf	set_CURSOR@i,f,c
  1164  007B68  0E00               	movlw	0
  1165  007B6A  2233               	addwfc	set_CURSOR@i+1,f,c
  1166  007B6C  2234               	addwfc	set_CURSOR@i+2,f,c
  1167  007B6E  2235               	addwfc	set_CURSOR@i+3,f,c
  1168  007B70  5035               	movf	set_CURSOR@i+3,w,c
  1169  007B72  1034               	iorwf	set_CURSOR@i+2,w,c
  1170  007B74  E107               	bnz	u1520
  1171  007B76  0E10               	movlw	16
  1172  007B78  5C32               	subwf	set_CURSOR@i,w,c
  1173  007B7A  0E27               	movlw	39
  1174  007B7C  5833               	subwfb	set_CURSOR@i+1,w,c
  1175  007B7E  B0D8               	btfsc	status,0,c
  1176  007B80  0012               	return	
  1177  007B82  D7F0               	goto	l2664
  1178  007B84                     u1520:
  1179  007B84  0012               	return		;funcret
  1180  007B86                     __end_of_set_CURSOR:
  1181                           	opt callstack 0
  1182                           
  1183 ;; *************** function _msg2LCD *****************
  1184 ;; Defined at:
  1185 ;;		line 27 in file "lcd.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  datos           2    2[COMRAM] PTR const unsigned char 
  1188 ;;		 -> STR_11(28), STR_10(5), STR_9(5), STR_8(5), 
  1189 ;;		 -> STR_5(5), STR_4(13), STR_3(16), STR_2(15), 
  1190 ;;		 -> STR_1(15), 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  i               4    4[COMRAM] unsigned long 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1202 ;;      Params:         2       0       0       0       0       0       0       0       0
  1203 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1205 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1206 ;;Total ram usage:        6 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    4
  1209 ;; This function calls:
  1210 ;;		_write_DATA
  1211 ;; This function is called by:
  1212 ;;		_parpadeoLed
  1213 ;;		_demo_shield2_1_INI
  1214 ;;		_demo_shield2_1
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text4
  1219  007BCA                     __ptext4:
  1220                           	opt callstack 0
  1221  007BCA                     _msg2LCD:
  1222                           	opt callstack 25
  1223                           
  1224                           ;lcd.c: 29: while (*datos != 0) {
  1225                           
  1226                           ;incstack = 0
  1227  007BCA  D021               	goto	l2680
  1228  007BCC                     l2668:
  1229                           
  1230                           ;lcd.c: 30: write_DATA(*datos);
  1231  007BCC  C031  FFF6         	movff	msg2LCD@datos,tblptrl
  1232  007BD0  C032  FFF7         	movff	msg2LCD@datos+1,tblptrh
  1233  007BD4                     	if	0	;tblptru may be non-zero
  1234  007BD4                     	endif
  1235  007BD4                     	if	0	;tblptru may be non-zero
  1236  007BD4                     	endif
  1237  007BD4  0008               	tblrd		*
  1238  007BD6  50F5               	movf	tablat,w,c
  1239  007BD8  EC04  F010         	call	_write_DATA
  1240                           
  1241                           ;lcd.c: 32: for (unsigned long i = 0; i < 1000; i++);
  1242  007BDC  0E00               	movlw	0
  1243  007BDE  6E33               	movwf	msg2LCD@i,c
  1244  007BE0  0E00               	movlw	0
  1245  007BE2  6E34               	movwf	msg2LCD@i+1,c
  1246  007BE4  0E00               	movlw	0
  1247  007BE6  6E35               	movwf	msg2LCD@i+2,c
  1248  007BE8  0E00               	movlw	0
  1249  007BEA  6E36               	movwf	msg2LCD@i+3,c
  1250  007BEC                     l2676:
  1251  007BEC  0E01               	movlw	1
  1252  007BEE  2633               	addwf	msg2LCD@i,f,c
  1253  007BF0  0E00               	movlw	0
  1254  007BF2  2234               	addwfc	msg2LCD@i+1,f,c
  1255  007BF4  2235               	addwfc	msg2LCD@i+2,f,c
  1256  007BF6  2236               	addwfc	msg2LCD@i+3,f,c
  1257  007BF8  5036               	movf	msg2LCD@i+3,w,c
  1258  007BFA  1035               	iorwf	msg2LCD@i+2,w,c
  1259  007BFC  E106               	bnz	u1530
  1260  007BFE  0EE8               	movlw	232
  1261  007C00  5C33               	subwf	msg2LCD@i,w,c
  1262  007C02  0E03               	movlw	3
  1263  007C04  5834               	subwfb	msg2LCD@i+1,w,c
  1264  007C06  A0D8               	btfss	status,0,c
  1265  007C08  D7F1               	goto	l2676
  1266  007C0A                     u1530:
  1267                           
  1268                           ;lcd.c: 33: datos++;
  1269  007C0A  4A31               	infsnz	msg2LCD@datos,f,c
  1270  007C0C  2A32               	incf	msg2LCD@datos+1,f,c
  1271  007C0E                     l2680:
  1272  007C0E  C031  FFF6         	movff	msg2LCD@datos,tblptrl
  1273  007C12  C032  FFF7         	movff	msg2LCD@datos+1,tblptrh
  1274  007C16                     	if	0	;tblptru may be non-zero
  1275  007C16                     	endif
  1276  007C16                     	if	0	;tblptru may be non-zero
  1277  007C16                     	endif
  1278  007C16  0008               	tblrd		*
  1279  007C18  50F5               	movf	tablat,w,c
  1280  007C1A  0900               	iorlw	0
  1281  007C1C  B4D8               	btfsc	status,2,c
  1282  007C1E  0012               	return	
  1283  007C20  D7D5               	goto	l2668
  1284  007C22                     __end_of_msg2LCD:
  1285                           	opt callstack 0
  1286                           
  1287 ;; *************** function _write_DATA *****************
  1288 ;; Defined at:
  1289 ;;		line 120 in file "lcd.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  dato            1    wreg     unsigned char 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  dato            1    1[COMRAM] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0
  1304 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1306 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1307 ;;Total ram usage:        1 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    3
  1310 ;; This function calls:
  1311 ;;		_write_LCD
  1312 ;; This function is called by:
  1313 ;;		_msg2LCD
  1314 ;;		_char2LCD
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text5
  1319  002008                     __ptext5:
  1320                           	opt callstack 0
  1321  002008                     _write_DATA:
  1322                           	opt callstack 25
  1323                           
  1324                           ;incstack = 0
  1325                           ;write_DATA@dato stored from wreg
  1326  002008  6E30               	movwf	write_DATA@dato,c
  1327                           
  1328                           ;lcd.c: 122: PORTEbits.RE1 = 0x1;
  1329  00200A  8284               	bsf	3972,1,c	;volatile
  1330                           
  1331                           ;lcd.c: 123: PORTEbits.RE0 = 0x0;
  1332  00200C  9084               	bcf	3972,0,c	;volatile
  1333                           
  1334                           ;lcd.c: 124: write_LCD(dato);
  1335  00200E  5030               	movf	write_DATA@dato,w,c
  1336  002010  EC41  F03D         	call	_write_LCD
  1337  002014  0012               	return		;funcret
  1338  002016                     __end_of_write_DATA:
  1339                           	opt callstack 0
  1340                           
  1341 ;; *************** function _clear_LCD *****************
  1342 ;; Defined at:
  1343 ;;		line 48 in file "lcd.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  i               4    2[COMRAM] unsigned long 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1357 ;;      Params:         0       0       0       0       0       0       0       0       0
  1358 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1360 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1361 ;;Total ram usage:        4 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    4
  1364 ;; This function calls:
  1365 ;;		_write_CMD
  1366 ;; This function is called by:
  1367 ;;		_parpadeoLed
  1368 ;;		_demo_shield2_1_INI
  1369 ;;		_demo_shield2_1
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text6
  1374  007B12                     __ptext6:
  1375                           	opt callstack 0
  1376  007B12                     _clear_LCD:
  1377                           	opt callstack 25
  1378                           
  1379                           ;lcd.c: 49: write_CMD(0x01);
  1380                           
  1381                           ;incstack = 0
  1382  007B12  0E01               	movlw	1
  1383  007B14  EC0E  F03D         	call	_write_CMD
  1384                           
  1385                           ;lcd.c: 51: for (unsigned long i = 0; i < 1000; i++);
  1386  007B18  0E00               	movlw	0
  1387  007B1A  6E31               	movwf	clear_LCD@i,c
  1388  007B1C  0E00               	movlw	0
  1389  007B1E  6E32               	movwf	clear_LCD@i+1,c
  1390  007B20  0E00               	movlw	0
  1391  007B22  6E33               	movwf	clear_LCD@i+2,c
  1392  007B24  0E00               	movlw	0
  1393  007B26  6E34               	movwf	clear_LCD@i+3,c
  1394  007B28                     l2690:
  1395  007B28  0E01               	movlw	1
  1396  007B2A  2631               	addwf	clear_LCD@i,f,c
  1397  007B2C  0E00               	movlw	0
  1398  007B2E  2232               	addwfc	clear_LCD@i+1,f,c
  1399  007B30  2233               	addwfc	clear_LCD@i+2,f,c
  1400  007B32  2234               	addwfc	clear_LCD@i+3,f,c
  1401  007B34  5034               	movf	clear_LCD@i+3,w,c
  1402  007B36  1033               	iorwf	clear_LCD@i+2,w,c
  1403  007B38  E107               	bnz	u1550
  1404  007B3A  0EE8               	movlw	232
  1405  007B3C  5C31               	subwf	clear_LCD@i,w,c
  1406  007B3E  0E03               	movlw	3
  1407  007B40  5832               	subwfb	clear_LCD@i+1,w,c
  1408  007B42  B0D8               	btfsc	status,0,c
  1409  007B44  0012               	return	
  1410  007B46  D7F0               	goto	l2690
  1411  007B48                     u1550:
  1412  007B48  0012               	return		;funcret
  1413  007B4A                     __end_of_clear_LCD:
  1414                           	opt callstack 0
  1415                           
  1416 ;; *************** function _TIMER1_INI *****************
  1417 ;; Defined at:
  1418 ;;		line 26 in file "Tecnica1.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1432 ;;      Params:         0       0       0       0       0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1435 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    2
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;;		_demo_shield2_1_INI
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text7
  1448  007AA2                     __ptext7:
  1449                           	opt callstack 0
  1450  007AA2                     _TIMER1_INI:
  1451                           	opt callstack 28
  1452                           
  1453                           ;Tecnica1.c: 27: T1CONbits.TMR1ON = 0;
  1454                           
  1455                           ;incstack = 0
  1456  007AA2  90CD               	bcf	4045,0,c	;volatile
  1457                           
  1458                           ;Tecnica1.c: 28: T1CONbits.TMR1CS = 0;
  1459  007AA4  92CD               	bcf	4045,1,c	;volatile
  1460                           
  1461                           ;Tecnica1.c: 29: T1CONbits.nT1SYNC = 1;
  1462  007AA6  84CD               	bsf	4045,2,c	;volatile
  1463                           
  1464                           ;Tecnica1.c: 30: T1CONbits.T1OSCEN = 0;
  1465  007AA8  96CD               	bcf	4045,3,c	;volatile
  1466                           
  1467                           ;Tecnica1.c: 31: T1CONbits.T1CKPS = 0;
  1468  007AAA  0ECF               	movlw	-49
  1469  007AAC  16CD               	andwf	4045,f,c	;volatile
  1470                           
  1471                           ;Tecnica1.c: 32: T1CONbits.RD16 = 0;
  1472  007AAE  9ECD               	bcf	4045,7,c	;volatile
  1473                           
  1474                           ;Tecnica1.c: 33: T1CONbits.T1RUN = 0;
  1475  007AB0  9CCD               	bcf	4045,6,c	;volatile
  1476                           
  1477                           ;Tecnica1.c: 34: TMR1L = 0x1B;
  1478  007AB2  0E1B               	movlw	27
  1479  007AB4  6ECE               	movwf	4046,c	;volatile
  1480                           
  1481                           ;Tecnica1.c: 35: TMR1H = 0xD1;
  1482  007AB6  0ED1               	movlw	209
  1483  007AB8  6ECF               	movwf	4047,c	;volatile
  1484                           
  1485                           ;Tecnica1.c: 36: PIR1bits.TMR1IF = 0;
  1486  007ABA  909E               	bcf	3998,0,c	;volatile
  1487                           
  1488                           ;Tecnica1.c: 37: PIE1bits.TMR1IE = 1;
  1489  007ABC  809D               	bsf	3997,0,c	;volatile
  1490                           
  1491                           ;Tecnica1.c: 38: INTCONbits.PEIE = 1;
  1492  007ABE  8CF2               	bsf	4082,6,c	;volatile
  1493  007AC0  0012               	return		;funcret
  1494  007AC2                     __end_of_TIMER1_INI:
  1495                           	opt callstack 0
  1496                           
  1497 ;; *************** function _TIMER0_INI *****************
  1498 ;; Defined at:
  1499 ;;		line 13 in file "Tecnica1.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1513 ;;      Params:         0       0       0       0       0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1516 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1517 ;;Total ram usage:        0 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    2
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;;		_demo_shield2_1_INI
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text8
  1529  007A68                     __ptext8:
  1530                           	opt callstack 0
  1531  007A68                     _TIMER0_INI:
  1532                           	opt callstack 28
  1533                           
  1534                           ;Tecnica1.c: 14: T0CONbits.TMR0ON = 0;
  1535                           
  1536                           ;incstack = 0
  1537  007A68  9ED5               	bcf	4053,7,c	;volatile
  1538                           
  1539                           ;Tecnica1.c: 15: T0CONbits.T08BIT = 0;
  1540  007A6A  9CD5               	bcf	4053,6,c	;volatile
  1541                           
  1542                           ;Tecnica1.c: 16: T0CONbits.T0CS = 0;
  1543  007A6C  9AD5               	bcf	4053,5,c	;volatile
  1544                           
  1545                           ;Tecnica1.c: 17: T0CONbits.PSA = 0;
  1546  007A6E  96D5               	bcf	4053,3,c	;volatile
  1547                           
  1548                           ;Tecnica1.c: 18: T0CONbits.T0PS0 = 1;
  1549  007A70  80D5               	bsf	4053,0,c	;volatile
  1550                           
  1551                           ;Tecnica1.c: 19: T0CONbits.T0PS1 = 1;
  1552  007A72  82D5               	bsf	4053,1,c	;volatile
  1553                           
  1554                           ;Tecnica1.c: 20: T0CONbits.T0PS2 = 1;
  1555  007A74  84D5               	bsf	4053,2,c	;volatile
  1556                           
  1557                           ;Tecnica1.c: 21: TMR0L = 0xD2;
  1558  007A76  0ED2               	movlw	210
  1559  007A78  6ED6               	movwf	4054,c	;volatile
  1560                           
  1561                           ;Tecnica1.c: 22: TMR0H = 0x48;
  1562  007A7A  0E48               	movlw	72
  1563  007A7C  6ED7               	movwf	4055,c	;volatile
  1564                           
  1565                           ;Tecnica1.c: 23: INTCONbits.TMR0IE = 1;
  1566  007A7E  8AF2               	bsf	4082,5,c	;volatile
  1567  007A80  0012               	return		;funcret
  1568  007A82                     __end_of_TIMER0_INI:
  1569                           	opt callstack 0
  1570                           
  1571 ;; *************** function _PicIni21 *****************
  1572 ;; Defined at:
  1573 ;;		line 3 in file "ConfShield2_1.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, status,2
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1587 ;;      Params:         0       0       0       0       0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1590 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1591 ;;Total ram usage:        0 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    2
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;;		_demo_shield2_1_INI
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text9
  1603  007AE6                     __ptext9:
  1604                           	opt callstack 0
  1605  007AE6                     _PicIni21:
  1606                           	opt callstack 28
  1607                           
  1608                           ;ConfShield2_1.c: 7: LATA = 0x00;
  1609                           
  1610                           ;incstack = 0
  1611  007AE6  0E00               	movlw	0
  1612  007AE8  6E89               	movwf	3977,c	;volatile
  1613                           
  1614                           ;ConfShield2_1.c: 8: LATB = 0x00;
  1615  007AEA  0E00               	movlw	0
  1616  007AEC  6E8A               	movwf	3978,c	;volatile
  1617                           
  1618                           ;ConfShield2_1.c: 9: LATC = 0x00;
  1619  007AEE  0E00               	movlw	0
  1620  007AF0  6E8B               	movwf	3979,c	;volatile
  1621                           
  1622                           ;ConfShield2_1.c: 10: LATD = 0x00;
  1623  007AF2  0E00               	movlw	0
  1624  007AF4  6E8C               	movwf	3980,c	;volatile
  1625                           
  1626                           ;ConfShield2_1.c: 11: LATE = 0x00;
  1627  007AF6  0E00               	movlw	0
  1628  007AF8  6E8D               	movwf	3981,c	;volatile
  1629                           
  1630                           ;ConfShield2_1.c: 15: TRISA = 0xFF;
  1631  007AFA  6892               	setf	3986,c	;volatile
  1632                           
  1633                           ;ConfShield2_1.c: 17: TRISB = 0xFF;
  1634  007AFC  6893               	setf	3987,c	;volatile
  1635                           
  1636                           ;ConfShield2_1.c: 18: TRISC = 0xFF;
  1637  007AFE  6894               	setf	3988,c	;volatile
  1638                           
  1639                           ;ConfShield2_1.c: 22: TRISD = 0x0C;
  1640  007B00  0E0C               	movlw	12
  1641  007B02  6E95               	movwf	3989,c	;volatile
  1642                           
  1643                           ;ConfShield2_1.c: 24: TRISE = 0x00;
  1644  007B04  0E00               	movlw	0
  1645  007B06  6E96               	movwf	3990,c	;volatile
  1646                           
  1647                           ;ConfShield2_1.c: 27: CMCON = 0x07;
  1648  007B08  0E07               	movlw	7
  1649  007B0A  6EB4               	movwf	4020,c	;volatile
  1650                           
  1651                           ;ConfShield2_1.c: 28: ADCON1 = 0x0F;
  1652  007B0C  0E0F               	movlw	15
  1653  007B0E  6EC1               	movwf	4033,c	;volatile
  1654  007B10  0012               	return		;funcret
  1655  007B12                     __end_of_PicIni21:
  1656                           	opt callstack 0
  1657                           
  1658 ;; *************** function _LCD_init *****************
  1659 ;; Defined at:
  1660 ;;		line 79 in file "lcd.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  i               4   22[COMRAM] unsigned long 
  1665 ;;  i               4   18[COMRAM] unsigned long 
  1666 ;;  i               4   14[COMRAM] unsigned long 
  1667 ;;  i               4   10[COMRAM] unsigned long 
  1668 ;;  i               4    6[COMRAM] unsigned long 
  1669 ;;  i               4    2[COMRAM] unsigned long 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1679 ;;      Params:         0       0       0       0       0       0       0       0       0
  1680 ;;      Locals:        24       0       0       0       0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1682 ;;      Totals:        24       0       0       0       0       0       0       0       0
  1683 ;;Total ram usage:       24 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    4
  1686 ;; This function calls:
  1687 ;;		_write_CMD
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;;		_demo_shield2_1_INI
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text10
  1695  007CCC                     __ptext10:
  1696                           	opt callstack 0
  1697  007CCC                     _LCD_init:
  1698                           	opt callstack 26
  1699                           
  1700                           ;lcd.c: 80: TRISD &= 0x0F;
  1701                           
  1702                           ;incstack = 0
  1703  007CCC  0E0F               	movlw	15
  1704  007CCE  1695               	andwf	3989,f,c	;volatile
  1705                           
  1706                           ;lcd.c: 81: TRISEbits.RE1 = 0;
  1707  007CD0  9296               	bcf	3990,1,c	;volatile
  1708                           
  1709                           ;lcd.c: 82: TRISEbits.RE0 = 0;
  1710  007CD2  9096               	bcf	3990,0,c	;volatile
  1711                           
  1712                           ;lcd.c: 83: TRISEbits.RE2 = 0;
  1713  007CD4  9496               	bcf	3990,2,c	;volatile
  1714                           
  1715                           ;lcd.c: 86: LCD_tout = 30;
  1716  007CD6  0E00               	movlw	0
  1717  007CD8  0100               	movlb	0	; () banked
  1718  007CDA  6F65               	movwf	(_LCD_tout+1)& (0+255),b
  1719  007CDC  0E1E               	movlw	30
  1720  007CDE  6F64               	movwf	_LCD_tout& (0+255),b
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;lcd.c: 88: for (unsigned long i = 0; i < 100000; i++);
  1724  007CE0  0E00               	movlw	0
  1725  007CE2  6E31               	movwf	LCD_init@i,c
  1726  007CE4  0E00               	movlw	0
  1727  007CE6  6E32               	movwf	LCD_init@i+1,c
  1728  007CE8  0E00               	movlw	0
  1729  007CEA  6E33               	movwf	LCD_init@i+2,c
  1730  007CEC  0E00               	movlw	0
  1731  007CEE  6E34               	movwf	LCD_init@i+3,c
  1732  007CF0                     l2706:
  1733  007CF0  0E01               	movlw	1
  1734  007CF2  2631               	addwf	LCD_init@i,f,c
  1735  007CF4  0E00               	movlw	0
  1736  007CF6  2232               	addwfc	LCD_init@i+1,f,c
  1737  007CF8  2233               	addwfc	LCD_init@i+2,f,c
  1738  007CFA  2234               	addwfc	LCD_init@i+3,f,c
  1739  007CFC  5034               	movf	LCD_init@i+3,w,c
  1740  007CFE  E108               	bnz	u1560
  1741  007D00  0EA0               	movlw	160
  1742  007D02  5C31               	subwf	LCD_init@i,w,c
  1743  007D04  0E86               	movlw	134
  1744  007D06  5832               	subwfb	LCD_init@i+1,w,c
  1745  007D08  0E01               	movlw	1
  1746  007D0A  5833               	subwfb	LCD_init@i+2,w,c
  1747  007D0C  A0D8               	btfss	status,0,c
  1748  007D0E  D7F0               	goto	l2706
  1749  007D10                     u1560:
  1750                           
  1751                           ;lcd.c: 90: write_CMD(0x02);
  1752  007D10  0E02               	movlw	2
  1753  007D12  EC0E  F03D         	call	_write_CMD
  1754                           
  1755                           ;lcd.c: 91: LCD_tout = 1;
  1756  007D16  0E00               	movlw	0
  1757  007D18  0100               	movlb	0	; () banked
  1758  007D1A  6F65               	movwf	(_LCD_tout+1)& (0+255),b
  1759  007D1C  0E01               	movlw	1
  1760  007D1E  6F64               	movwf	_LCD_tout& (0+255),b
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;lcd.c: 93: for (unsigned long i = 0; i < 100000; i++);
  1764  007D20  0E00               	movlw	0
  1765  007D22  6E35               	movwf	LCD_init@i_434,c
  1766  007D24  0E00               	movlw	0
  1767  007D26  6E36               	movwf	LCD_init@i_434+1,c
  1768  007D28  0E00               	movlw	0
  1769  007D2A  6E37               	movwf	LCD_init@i_434+2,c
  1770  007D2C  0E00               	movlw	0
  1771  007D2E  6E38               	movwf	LCD_init@i_434+3,c
  1772  007D30                     l2718:
  1773  007D30  0E01               	movlw	1
  1774  007D32  2635               	addwf	LCD_init@i_434,f,c
  1775  007D34  0E00               	movlw	0
  1776  007D36  2236               	addwfc	LCD_init@i_434+1,f,c
  1777  007D38  2237               	addwfc	LCD_init@i_434+2,f,c
  1778  007D3A  2238               	addwfc	LCD_init@i_434+3,f,c
  1779  007D3C  5038               	movf	LCD_init@i_434+3,w,c
  1780  007D3E  E108               	bnz	u1570
  1781  007D40  0EA0               	movlw	160
  1782  007D42  5C35               	subwf	LCD_init@i_434,w,c
  1783  007D44  0E86               	movlw	134
  1784  007D46  5836               	subwfb	LCD_init@i_434+1,w,c
  1785  007D48  0E01               	movlw	1
  1786  007D4A  5837               	subwfb	LCD_init@i_434+2,w,c
  1787  007D4C  A0D8               	btfss	status,0,c
  1788  007D4E  D7F0               	goto	l2718
  1789  007D50                     u1570:
  1790                           
  1791                           ;lcd.c: 95: write_CMD(0x28);
  1792  007D50  0E28               	movlw	40
  1793  007D52  EC0E  F03D         	call	_write_CMD
  1794                           
  1795                           ;lcd.c: 96: LCD_tout = 1;
  1796  007D56  0E00               	movlw	0
  1797  007D58  0100               	movlb	0	; () banked
  1798  007D5A  6F65               	movwf	(_LCD_tout+1)& (0+255),b
  1799  007D5C  0E01               	movlw	1
  1800  007D5E  6F64               	movwf	_LCD_tout& (0+255),b
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;lcd.c: 98: for (unsigned long i = 0; i < 100000; i++);
  1804  007D60  0E00               	movlw	0
  1805  007D62  6E39               	movwf	LCD_init@i_435,c
  1806  007D64  0E00               	movlw	0
  1807  007D66  6E3A               	movwf	LCD_init@i_435+1,c
  1808  007D68  0E00               	movlw	0
  1809  007D6A  6E3B               	movwf	LCD_init@i_435+2,c
  1810  007D6C  0E00               	movlw	0
  1811  007D6E  6E3C               	movwf	LCD_init@i_435+3,c
  1812  007D70                     l2730:
  1813  007D70  0E01               	movlw	1
  1814  007D72  2639               	addwf	LCD_init@i_435,f,c
  1815  007D74  0E00               	movlw	0
  1816  007D76  223A               	addwfc	LCD_init@i_435+1,f,c
  1817  007D78  223B               	addwfc	LCD_init@i_435+2,f,c
  1818  007D7A  223C               	addwfc	LCD_init@i_435+3,f,c
  1819  007D7C  503C               	movf	LCD_init@i_435+3,w,c
  1820  007D7E  E108               	bnz	u1580
  1821  007D80  0EA0               	movlw	160
  1822  007D82  5C39               	subwf	LCD_init@i_435,w,c
  1823  007D84  0E86               	movlw	134
  1824  007D86  583A               	subwfb	LCD_init@i_435+1,w,c
  1825  007D88  0E01               	movlw	1
  1826  007D8A  583B               	subwfb	LCD_init@i_435+2,w,c
  1827  007D8C  A0D8               	btfss	status,0,c
  1828  007D8E  D7F0               	goto	l2730
  1829  007D90                     u1580:
  1830                           
  1831                           ;lcd.c: 100: write_CMD(0x0C);
  1832  007D90  0E0C               	movlw	12
  1833  007D92  EC0E  F03D         	call	_write_CMD
  1834                           
  1835                           ;lcd.c: 101: LCD_tout = 1;
  1836  007D96  0E00               	movlw	0
  1837  007D98  0100               	movlb	0	; () banked
  1838  007D9A  6F65               	movwf	(_LCD_tout+1)& (0+255),b
  1839  007D9C  0E01               	movlw	1
  1840  007D9E  6F64               	movwf	_LCD_tout& (0+255),b
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;lcd.c: 103: for (unsigned long i = 0; i < 100000; i++);
  1844  007DA0  0E00               	movlw	0
  1845  007DA2  6E3D               	movwf	LCD_init@i_436,c
  1846  007DA4  0E00               	movlw	0
  1847  007DA6  6E3E               	movwf	LCD_init@i_436+1,c
  1848  007DA8  0E00               	movlw	0
  1849  007DAA  6E3F               	movwf	LCD_init@i_436+2,c
  1850  007DAC  0E00               	movlw	0
  1851  007DAE  6E40               	movwf	LCD_init@i_436+3,c
  1852  007DB0                     l2742:
  1853  007DB0  0E01               	movlw	1
  1854  007DB2  263D               	addwf	LCD_init@i_436,f,c
  1855  007DB4  0E00               	movlw	0
  1856  007DB6  223E               	addwfc	LCD_init@i_436+1,f,c
  1857  007DB8  223F               	addwfc	LCD_init@i_436+2,f,c
  1858  007DBA  2240               	addwfc	LCD_init@i_436+3,f,c
  1859  007DBC  5040               	movf	LCD_init@i_436+3,w,c
  1860  007DBE  E108               	bnz	u1590
  1861  007DC0  0EA0               	movlw	160
  1862  007DC2  5C3D               	subwf	LCD_init@i_436,w,c
  1863  007DC4  0E86               	movlw	134
  1864  007DC6  583E               	subwfb	LCD_init@i_436+1,w,c
  1865  007DC8  0E01               	movlw	1
  1866  007DCA  583F               	subwfb	LCD_init@i_436+2,w,c
  1867  007DCC  A0D8               	btfss	status,0,c
  1868  007DCE  D7F0               	goto	l2742
  1869  007DD0                     u1590:
  1870                           
  1871                           ;lcd.c: 105: write_CMD(0x01);
  1872  007DD0  0E01               	movlw	1
  1873  007DD2  EC0E  F03D         	call	_write_CMD
  1874                           
  1875                           ;lcd.c: 106: LCD_tout = 1;
  1876  007DD6  0E00               	movlw	0
  1877  007DD8  0100               	movlb	0	; () banked
  1878  007DDA  6F65               	movwf	(_LCD_tout+1)& (0+255),b
  1879  007DDC  0E01               	movlw	1
  1880  007DDE  6F64               	movwf	_LCD_tout& (0+255),b
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;lcd.c: 108: for (unsigned long i = 0; i < 100000; i++);
  1884  007DE0  0E00               	movlw	0
  1885  007DE2  6E41               	movwf	LCD_init@i_437,c
  1886  007DE4  0E00               	movlw	0
  1887  007DE6  6E42               	movwf	LCD_init@i_437+1,c
  1888  007DE8  0E00               	movlw	0
  1889  007DEA  6E43               	movwf	LCD_init@i_437+2,c
  1890  007DEC  0E00               	movlw	0
  1891  007DEE  6E44               	movwf	LCD_init@i_437+3,c
  1892  007DF0                     l2754:
  1893  007DF0  0E01               	movlw	1
  1894  007DF2  2641               	addwf	LCD_init@i_437,f,c
  1895  007DF4  0E00               	movlw	0
  1896  007DF6  2242               	addwfc	LCD_init@i_437+1,f,c
  1897  007DF8  2243               	addwfc	LCD_init@i_437+2,f,c
  1898  007DFA  2244               	addwfc	LCD_init@i_437+3,f,c
  1899  007DFC  5044               	movf	LCD_init@i_437+3,w,c
  1900  007DFE  E108               	bnz	u1600
  1901  007E00  0EA0               	movlw	160
  1902  007E02  5C41               	subwf	LCD_init@i_437,w,c
  1903  007E04  0E86               	movlw	134
  1904  007E06  5842               	subwfb	LCD_init@i_437+1,w,c
  1905  007E08  0E01               	movlw	1
  1906  007E0A  5843               	subwfb	LCD_init@i_437+2,w,c
  1907  007E0C  A0D8               	btfss	status,0,c
  1908  007E0E  D7F0               	goto	l2754
  1909  007E10                     u1600:
  1910                           
  1911                           ;lcd.c: 110: write_CMD(0x06);
  1912  007E10  0E06               	movlw	6
  1913  007E12  EC0E  F03D         	call	_write_CMD
  1914                           
  1915                           ;lcd.c: 111: LCD_tout = 1;
  1916  007E16  0E00               	movlw	0
  1917  007E18  0100               	movlb	0	; () banked
  1918  007E1A  6F65               	movwf	(_LCD_tout+1)& (0+255),b
  1919  007E1C  0E01               	movlw	1
  1920  007E1E  6F64               	movwf	_LCD_tout& (0+255),b
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;lcd.c: 113: for (unsigned long i = 0; i < 100000; i++);
  1924  007E20  0E00               	movlw	0
  1925  007E22  6E45               	movwf	LCD_init@i_438,c
  1926  007E24  0E00               	movlw	0
  1927  007E26  6E46               	movwf	LCD_init@i_438+1,c
  1928  007E28  0E00               	movlw	0
  1929  007E2A  6E47               	movwf	LCD_init@i_438+2,c
  1930  007E2C  0E00               	movlw	0
  1931  007E2E  6E48               	movwf	LCD_init@i_438+3,c
  1932  007E30                     l2766:
  1933  007E30  0E01               	movlw	1
  1934  007E32  2645               	addwf	LCD_init@i_438,f,c
  1935  007E34  0E00               	movlw	0
  1936  007E36  2246               	addwfc	LCD_init@i_438+1,f,c
  1937  007E38  2247               	addwfc	LCD_init@i_438+2,f,c
  1938  007E3A  2248               	addwfc	LCD_init@i_438+3,f,c
  1939  007E3C  5048               	movf	LCD_init@i_438+3,w,c
  1940  007E3E  E109               	bnz	u1610
  1941  007E40  0EA0               	movlw	160
  1942  007E42  5C45               	subwf	LCD_init@i_438,w,c
  1943  007E44  0E86               	movlw	134
  1944  007E46  5846               	subwfb	LCD_init@i_438+1,w,c
  1945  007E48  0E01               	movlw	1
  1946  007E4A  5847               	subwfb	LCD_init@i_438+2,w,c
  1947  007E4C  B0D8               	btfsc	status,0,c
  1948  007E4E  0012               	return	
  1949  007E50  D7EF               	goto	l2766
  1950  007E52                     u1610:
  1951  007E52  0012               	return		;funcret
  1952  007E54                     __end_of_LCD_init:
  1953                           	opt callstack 0
  1954                           
  1955 ;; *************** function _write_CMD *****************
  1956 ;; Defined at:
  1957 ;;		line 130 in file "lcd.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  dato            1    wreg     unsigned char 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  dato            1    1[COMRAM] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1971 ;;      Params:         0       0       0       0       0       0       0       0       0
  1972 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1974 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1975 ;;Total ram usage:        1 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    3
  1978 ;; This function calls:
  1979 ;;		_write_LCD
  1980 ;; This function is called by:
  1981 ;;		_clear_LCD
  1982 ;;		_set_CURSOR
  1983 ;;		_LCD_init
  1984 ;;		_ret_HOME
  1985 ;;		_DesplazarIzquierda
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text11
  1990  007A1C                     __ptext11:
  1991                           	opt callstack 0
  1992  007A1C                     _write_CMD:
  1993                           	opt callstack 25
  1994                           
  1995                           ;incstack = 0
  1996                           ;write_CMD@dato stored from wreg
  1997  007A1C  6E30               	movwf	write_CMD@dato,c
  1998                           
  1999                           ;lcd.c: 132: PORTEbits.RE1 = 0x0;
  2000  007A1E  9284               	bcf	3972,1,c	;volatile
  2001                           
  2002                           ;lcd.c: 133: PORTEbits.RE0 = 0x0;
  2003  007A20  9084               	bcf	3972,0,c	;volatile
  2004                           
  2005                           ;lcd.c: 134: write_LCD(dato);
  2006  007A22  5030               	movf	write_CMD@dato,w,c
  2007  007A24  EC41  F03D         	call	_write_LCD
  2008  007A28  0012               	return		;funcret
  2009  007A2A                     __end_of_write_CMD:
  2010                           	opt callstack 0
  2011                           
  2012 ;; *************** function _write_LCD *****************
  2013 ;; Defined at:
  2014 ;;		line 140 in file "lcd.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  dato            1    wreg     unsigned char 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  dato            1    0[COMRAM] unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2028 ;;      Params:         0       0       0       0       0       0       0       0       0
  2029 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2031 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2032 ;;Total ram usage:        1 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    2
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_write_DATA
  2039 ;;		_write_CMD
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text12
  2044  007A82                     __ptext12:
  2045                           	opt callstack 0
  2046  007A82                     _write_LCD:
  2047                           	opt callstack 25
  2048                           
  2049                           ;incstack = 0
  2050                           ;write_LCD@dato stored from wreg
  2051  007A82  6E2F               	movwf	write_LCD@dato,c
  2052                           
  2053                           ;lcd.c: 142: LATD &= 0x0F;
  2054  007A84  0E0F               	movlw	15
  2055  007A86  168C               	andwf	3980,f,c	;volatile
  2056                           
  2057                           ;lcd.c: 143: PORTEbits.RE2 = 0x1;
  2058  007A88  8484               	bsf	3972,2,c	;volatile
  2059                           
  2060                           ;lcd.c: 146: LATD |= (dato & 0xF0);
  2061  007A8A  502F               	movf	write_LCD@dato,w,c
  2062  007A8C  0BF0               	andlw	240
  2063  007A8E  128C               	iorwf	3980,f,c	;volatile
  2064                           
  2065                           ;lcd.c: 148: PORTEbits.RE2 = 0x0;
  2066  007A90  9484               	bcf	3972,2,c	;volatile
  2067                           
  2068                           ;lcd.c: 150: LATD &= 0x0F;
  2069  007A92  0E0F               	movlw	15
  2070  007A94  168C               	andwf	3980,f,c	;volatile
  2071                           
  2072                           ;lcd.c: 151: PORTEbits.RE2 = 0x1;
  2073  007A96  8484               	bsf	3972,2,c	;volatile
  2074                           
  2075                           ;lcd.c: 154: LATD |= (dato << 4);
  2076  007A98  382F               	swapf	write_LCD@dato,w,c
  2077  007A9A  0BF0               	andlw	240
  2078  007A9C  128C               	iorwf	3980,f,c	;volatile
  2079                           
  2080                           ;lcd.c: 156: PORTEbits.RE2 = 0x0;
  2081  007A9E  9484               	bcf	3972,2,c	;volatile
  2082  007AA0  0012               	return		;funcret
  2083  007AA2                     __end_of_write_LCD:
  2084                           	opt callstack 0
  2085                           
  2086 ;; *************** function _myISR *****************
  2087 ;; Defined at:
  2088 ;;		line 61 in file "main.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2105 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    1
  2109 ;; This function calls:
  2110 ;;		_marca_tecla
  2111 ;;		_tic_LCD
  2112 ;;		_tic_teclado
  2113 ;; This function is called by:
  2114 ;;		Interrupt level 2
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	intcode
  2119  000008                     __pintcode:
  2120                           	opt callstack 0
  2121  000008                     _myISR:
  2122                           	opt callstack 25
  2123                           
  2124                           ;incstack = 0
  2125  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2126  00000A  ED11  F03E         	call	int_func,f	;refresh shadow registers
  2127                           
  2128                           	psect	intcode_body
  2129  007C22                     __pintcode_body:
  2130                           	opt callstack 25
  2131  007C22                     int_func:
  2132                           	opt callstack 25
  2133  007C22  0006               	pop		; remove dummy address from shadow register refresh
  2134                           
  2135                           ;main.c: 64: if (TMR0IF == 1) {
  2136  007C24  A4F2               	btfss	4082,2,c	;volatile
  2137  007C26  D041               	goto	i2l2922
  2138                           
  2139                           ;main.c: 65: TMR0IF = 0;
  2140  007C28  94F2               	bcf	4082,2,c	;volatile
  2141                           
  2142                           ;main.c: 66: TMR0L = 0xD2;
  2143  007C2A  0ED2               	movlw	210
  2144  007C2C  6ED6               	movwf	4054,c	;volatile
  2145                           
  2146                           ;main.c: 67: TMR0H = 0x48;
  2147  007C2E  0E48               	movlw	72
  2148  007C30  6ED7               	movwf	4055,c	;volatile
  2149                           
  2150                           ;main.c: 70: if(activador_tiempo_ventana_peso==1){
  2151  007C32  0409               	decf	_activador_tiempo_ventana_peso,w,c
  2152  007C34  100A               	iorwf	_activador_tiempo_ventana_peso+1,w,c
  2153  007C36  100B               	iorwf	_activador_tiempo_ventana_peso+2,w,c
  2154  007C38  100C               	iorwf	_activador_tiempo_ventana_peso+3,w,c
  2155  007C3A  A4D8               	btfss	status,2,c
  2156  007C3C  D00E               	goto	i2l84
  2157                           
  2158                           ;main.c: 71: if(tiempo_ventana_peso!=0){
  2159  007C3E  5051               	movf	_tiempo_ventana_peso,w,c
  2160  007C40  1052               	iorwf	_tiempo_ventana_peso+1,w,c
  2161  007C42  1053               	iorwf	_tiempo_ventana_peso+2,w,c
  2162  007C44  1054               	iorwf	_tiempo_ventana_peso+3,w,c
  2163  007C46  B4D8               	btfsc	status,2,c
  2164  007C48  D008               	goto	i2l84
  2165                           
  2166                           ;main.c: 72: tiempo_ventana_peso--;
  2167  007C4A  0EFF               	movlw	255
  2168  007C4C  2651               	addwf	_tiempo_ventana_peso,f,c
  2169  007C4E  0EFF               	movlw	255
  2170  007C50  2252               	addwfc	_tiempo_ventana_peso+1,f,c
  2171  007C52  0EFF               	movlw	255
  2172  007C54  2253               	addwfc	_tiempo_ventana_peso+2,f,c
  2173  007C56  0EFF               	movlw	255
  2174  007C58  2254               	addwfc	_tiempo_ventana_peso+3,f,c
  2175  007C5A                     i2l84:
  2176                           
  2177                           ;main.c: 73: };main.c: 74: };main.c: 76: if(activador_on == 1){
  2178  007C5A  0405               	decf	_activador_on,w,c
  2179  007C5C  1006               	iorwf	_activador_on+1,w,c
  2180  007C5E  1007               	iorwf	_activador_on+2,w,c
  2181  007C60  1008               	iorwf	_activador_on+3,w,c
  2182  007C62  A4D8               	btfss	status,2,c
  2183  007C64  D00E               	goto	i2l86
  2184                           
  2185                           ;main.c: 77: if(tiempo_parpadeo_on != 0){
  2186  007C66  504D               	movf	_tiempo_parpadeo_on,w,c
  2187  007C68  104E               	iorwf	_tiempo_parpadeo_on+1,w,c
  2188  007C6A  104F               	iorwf	_tiempo_parpadeo_on+2,w,c
  2189  007C6C  1050               	iorwf	_tiempo_parpadeo_on+3,w,c
  2190  007C6E  B4D8               	btfsc	status,2,c
  2191  007C70  D008               	goto	i2l86
  2192                           
  2193                           ;main.c: 78: tiempo_parpadeo_on--;
  2194  007C72  0EFF               	movlw	255
  2195  007C74  264D               	addwf	_tiempo_parpadeo_on,f,c
  2196  007C76  0EFF               	movlw	255
  2197  007C78  224E               	addwfc	_tiempo_parpadeo_on+1,f,c
  2198  007C7A  0EFF               	movlw	255
  2199  007C7C  224F               	addwfc	_tiempo_parpadeo_on+2,f,c
  2200  007C7E  0EFF               	movlw	255
  2201  007C80  2250               	addwfc	_tiempo_parpadeo_on+3,f,c
  2202  007C82                     i2l86:
  2203                           
  2204                           ;main.c: 79: };main.c: 80: };main.c: 82: if(activador_off==1){
  2205  007C82  0401               	decf	_activador_off,w,c
  2206  007C84  1002               	iorwf	_activador_off+1,w,c
  2207  007C86  1003               	iorwf	_activador_off+2,w,c
  2208  007C88  1004               	iorwf	_activador_off+3,w,c
  2209  007C8A  A4D8               	btfss	status,2,c
  2210  007C8C  D00E               	goto	i2l2922
  2211                           
  2212                           ;main.c: 83: if(tiempo_parpadeo_off !=0){
  2213  007C8E  5049               	movf	_tiempo_parpadeo_off,w,c
  2214  007C90  104A               	iorwf	_tiempo_parpadeo_off+1,w,c
  2215  007C92  104B               	iorwf	_tiempo_parpadeo_off+2,w,c
  2216  007C94  104C               	iorwf	_tiempo_parpadeo_off+3,w,c
  2217  007C96  B4D8               	btfsc	status,2,c
  2218  007C98  D008               	goto	i2l2922
  2219                           
  2220                           ;main.c: 84: tiempo_parpadeo_off--;
  2221  007C9A  0EFF               	movlw	255
  2222  007C9C  2649               	addwf	_tiempo_parpadeo_off,f,c
  2223  007C9E  0EFF               	movlw	255
  2224  007CA0  224A               	addwfc	_tiempo_parpadeo_off+1,f,c
  2225  007CA2  0EFF               	movlw	255
  2226  007CA4  224B               	addwfc	_tiempo_parpadeo_off+2,f,c
  2227  007CA6  0EFF               	movlw	255
  2228  007CA8  224C               	addwfc	_tiempo_parpadeo_off+3,f,c
  2229  007CAA                     i2l2922:
  2230                           
  2231                           ;main.c: 85: };main.c: 86: };main.c: 90: };main.c: 92: if (TMR1IF == 1) {
  2232  007CAA  A09E               	btfss	3998,0,c	;volatile
  2233  007CAC  D00D               	goto	i2l92
  2234                           
  2235                           ;main.c: 93: TMR1IF = 0;
  2236  007CAE  909E               	bcf	3998,0,c	;volatile
  2237                           
  2238                           ;main.c: 94: TMR1L = 0x1B;
  2239  007CB0  0E1B               	movlw	27
  2240  007CB2  6ECE               	movwf	4046,c	;volatile
  2241                           
  2242                           ;main.c: 95: TMR1H = 0xD1;
  2243  007CB4  0ED1               	movlw	209
  2244  007CB6  6ECF               	movwf	4047,c	;volatile
  2245                           
  2246                           ;main.c: 96: tic_teclado();
  2247  007CB8  EC03  F03D         	call	_tic_teclado	;wreg free
  2248                           
  2249                           ;main.c: 97: tic_LCD();
  2250  007CBC  EC15  F03D         	call	_tic_LCD	;wreg free
  2251                           
  2252                           ;main.c: 98: if (RBIF == 1) {
  2253  007CC0  B0F2               	btfsc	4082,0,c	;volatile
  2254                           
  2255                           ;main.c: 99: marca_tecla();
  2256  007CC2  EC08  F03D         	call	_marca_tecla	;wreg free
  2257                           
  2258                           ;main.c: 100: };main.c: 101: RBIF = 0;
  2259  007CC6  90F2               	bcf	4082,0,c	;volatile
  2260  007CC8                     i2l92:
  2261  007CC8  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2262  007CCA  0011               	retfie		f
  2263  007CCC                     __end_of_myISR:
  2264                           	opt callstack 0
  2265                           
  2266 ;; *************** function _tic_teclado *****************
  2267 ;; Defined at:
  2268 ;;		line 214 in file "teclado.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2, status,0
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2282 ;;      Params:         0       0       0       0       0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2285 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_myISR
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text14
  2296  007A06                     __ptext14:
  2297                           	opt callstack 0
  2298  007A06                     _tic_teclado:
  2299                           	opt callstack 25
  2300                           
  2301                           ;teclado.c: 216: if (delay_kb) delay_kb--;
  2302                           
  2303                           ;incstack = 0
  2304  007A06  5014               	movf	_delay_kb,w,c	;volatile
  2305  007A08  B4D8               	btfsc	status,2,c
  2306  007A0A  0012               	return	
  2307  007A0C  0614               	decf	_delay_kb,f,c	;volatile
  2308  007A0E  0012               	return		;funcret
  2309  007A10                     __end_of_tic_teclado:
  2310                           	opt callstack 0
  2311                           
  2312 ;; *************** function _tic_LCD *****************
  2313 ;; Defined at:
  2314 ;;		line 182 in file "lcd.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2328 ;;      Params:         0       0       0       0       0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2331 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_myISR
  2338 ;;		_tic_demo_shield2_1
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text15
  2343  007A2A                     __ptext15:
  2344                           	opt callstack 0
  2345  007A2A                     _tic_LCD:
  2346                           	opt callstack 25
  2347                           
  2348                           ;lcd.c: 183: if (LCD_tout) LCD_tout--;
  2349                           
  2350                           ;incstack = 0
  2351  007A2A  0100               	movlb	0	; () banked
  2352  007A2C  5164               	movf	_LCD_tout& (0+255),w,b
  2353  007A2E  1165               	iorwf	(_LCD_tout+1)& (0+255),w,b
  2354  007A30  B4D8               	btfsc	status,2,c
  2355  007A32  0012               	return	
  2356                           
  2357                           ; BSR set to: 0
  2358  007A34  0764               	decf	_LCD_tout& (0+255),f,b
  2359  007A36  A0D8               	btfss	status,0,c
  2360  007A38  0765               	decf	(_LCD_tout+1)& (0+255),f,b
  2361                           
  2362                           ; BSR set to: 0
  2363  007A3A  0012               	return		;funcret
  2364  007A3C                     __end_of_tic_LCD:
  2365                           	opt callstack 0
  2366                           
  2367 ;; *************** function _marca_tecla *****************
  2368 ;; Defined at:
  2369 ;;		line 207 in file "teclado.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2383 ;;      Params:         0       0       0       0       0       0       0       0       0
  2384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2386 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2387 ;;Total ram usage:        0 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_myISR
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text16
  2397  007A10                     __ptext16:
  2398                           	opt callstack 0
  2399  007A10                     _marca_tecla:
  2400                           	opt callstack 25
  2401                           
  2402                           ;teclado.c: 208: (void) PORTB;
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;incstack = 0
  2406  007A10  5081               	movf	3969,w,c	;volatile
  2407  007A12  F000               	nop		;# 
  2408                           
  2409                           ;teclado.c: 210: flag_kb = 1;
  2410  007A14  0E01               	movlw	1
  2411  007A16  6E15               	movwf	_flag_kb,c	;volatile
  2412  007A18  F000               	nop		;# 
  2413  007A1A  0012               	return		;funcret
  2414  007A1C                     __end_of_marca_tecla:
  2415                           	opt callstack 0
  2416                           
  2417                           	psect	rparam
  2418  0000                     
  2419                           	psect	temp
  2420  00005F                     btemp:
  2421                           	opt callstack 0
  2422  00005F                     	ds	1
  2423  0000                     int$flags	set	btemp
  2424  0000                     wtemp8	set	btemp+1
  2425  0000                     ttemp5	set	btemp+1
  2426  0000                     ttemp6	set	btemp+4
  2427  0000                     ttemp7	set	btemp+8
  2428                           tosu	equ	0xFFF
  2429                           tosh	equ	0xFFE
  2430                           tosl	equ	0xFFD
  2431                           stkptr	equ	0xFFC
  2432                           pclatu	equ	0xFFB
  2433                           pclath	equ	0xFFA
  2434                           pcl	equ	0xFF9
  2435                           tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           prodh	equ	0xFF4
  2440                           prodl	equ	0xFF3
  2441                           indf0	equ	0xFEF
  2442                           postinc0	equ	0xFEE
  2443                           postdec0	equ	0xFED
  2444                           preinc0	equ	0xFEC
  2445                           plusw0	equ	0xFEB
  2446                           fsr0h	equ	0xFEA
  2447                           fsr0l	equ	0xFE9
  2448                           wreg	equ	0xFE8
  2449                           indf1	equ	0xFE7
  2450                           postinc1	equ	0xFE6
  2451                           postdec1	equ	0xFE5
  2452                           preinc1	equ	0xFE4
  2453                           plusw1	equ	0xFE3
  2454                           fsr1h	equ	0xFE2
  2455                           fsr1l	equ	0xFE1
  2456                           bsr	equ	0xFE0
  2457                           indf2	equ	0xFDF
  2458                           postinc2	equ	0xFDE
  2459                           postdec2	equ	0xFDD
  2460                           preinc2	equ	0xFDC
  2461                           plusw2	equ	0xFDB
  2462                           fsr2h	equ	0xFDA
  2463                           fsr2l	equ	0xFD9
  2464                           status	equ	0xFD8


Data Sizes:
    Strings     113
    Constant    12
    Data        22
    BSS         50
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      94
    BANK0           160      0       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    msg2LCD@datos	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_11(CODE[28]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_5(CODE[5]), STR_4(CODE[13]), STR_3(CODE[16]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_LCD_init
    _parpadeoLed->_msg2LCD
    _set_CURSOR->_write_CMD
    _msg2LCD->_write_DATA
    _write_DATA->_write_LCD
    _clear_LCD->_write_CMD
    _LCD_init->_write_CMD
    _write_CMD->_write_LCD

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1430
                           _LCD_init
                           _PicIni21
                         _TIMER0_INI
                         _TIMER1_INI
                        _parpadeoLed
                       _tecladoIni13
 ---------------------------------------------------------------------------------
 (1) _tecladoIni13                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _parpadeoLed                                          4     4      0    1088
                                              8 COMRAM     4     4      0
                          _clear_LCD
                            _msg2LCD
                         _set_CURSOR
 ---------------------------------------------------------------------------------
 (2) _set_CURSOR                                           5     5      0     135
                                              2 COMRAM     5     5      0
                          _write_CMD
 ---------------------------------------------------------------------------------
 (2) _msg2LCD                                              6     4      2     841
                                              2 COMRAM     6     4      2
                         _write_DATA
 ---------------------------------------------------------------------------------
 (3) _write_DATA                                           1     1      0      66
                                              1 COMRAM     1     1      0
                          _write_LCD
 ---------------------------------------------------------------------------------
 (2) _clear_LCD                                            4     4      0     112
                                              2 COMRAM     4     4      0
                          _write_CMD
 ---------------------------------------------------------------------------------
 (1) _TIMER1_INI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_INI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PicIni21                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                            24    24      0     342
                                              2 COMRAM    24    24      0
                          _write_CMD
 ---------------------------------------------------------------------------------
 (3) _write_CMD                                            1     1      0      66
                                              1 COMRAM     1     1      0
                          _write_LCD
 ---------------------------------------------------------------------------------
 (4) _write_LCD                                            1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myISR                                                0     0      0       0
                        _marca_tecla
                            _tic_LCD
                        _tic_teclado
 ---------------------------------------------------------------------------------
 (6) _tic_teclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _tic_LCD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _marca_tecla                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _write_CMD
       _write_LCD
   _PicIni21
   _TIMER0_INI
   _TIMER1_INI
   _parpadeoLed
     _clear_LCD
       _write_CMD
         _write_LCD
     _msg2LCD
       _write_DATA
         _write_LCD
     _set_CURSOR
       _write_CMD
         _write_LCD
   _tecladoIni13

 _myISR (ROOT)
   _marca_tecla
   _tic_LCD
   _tic_teclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       6       5        3.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      64      20        0.0%
DATA                 0      0      64       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Sep 16 11:36:53 2021

                  __CFG_BOR$ON 000000                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CPB$OFF 000000                            _PR2 000FCB  
                          _col 0055               _MultiplicadorSet 0028                            wreg 000FE8  
                 __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000                           l2800 7EEC  
                         l2730 7D70                           l2706 7CF0                           l3194 7FA0  
                         l2810 7F1C                           l3196 7FC4                           l2900 7AE0  
                         l2742 7DB0                           l2718 7D30                           l2680 7C0E  
                         l2664 7B64                           l2816 7F50                           l2754 7DF0  
                         l2690 7B28                           l2826 7F86                           l2676 7BEC  
                         l2668 7BCC                           l2772 7E72                           l2828 7FCC  
                         l2766 7E30                           l2790 7EC6                           l2782 7EA2  
                         STR_1 2051                           STR_2 2060                           STR_3 2041  
                         STR_4 206F                           STR_5 2082                           STR_6 207C  
                         STR_8 2087                           STR_9 208C                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           u1600 7E10  
                         u1520 7B84                           _LATD 000F8C                           _LATE 000F8D  
                         u1610 7E52                           u1530 7C0A                           u1550 7B48  
                         u1560 7D10                           u1570 7D50                           u1580 7D90  
                         u1590 7DD0                           _RBIE 007F93                           _RBIF 007F90  
                         _RBIP 007F88                           i2l92 7CC8                           i2l84 7C5A  
                         i2l86 7C82                           _RBPU 007F8F                   ?_marca_tecla 002F  
                         _fila 0056                           _main 7AC2  _activador_tiempo_ventana_peso 0009  
                         fsr1l 000FE1                           btemp 005F                           start 000E  
                __CFG_IESO$OFF 000000                   msg2LCD@datos 0031                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000000                    ?_TIMER0_INI 002F                    ?_TIMER1_INI 002F  
                __CFG_PLLDIV$5 000000               __end_of_LCD_init 7E54                          ?_main 002F  
                        _EEADR 000FA9                          STR_10 2091                          STR_11 2025  
                        _CMCON 000FB4                          _RCREG 000FAE                          _TMR0H 000FD7  
                        _TMR1H 000FCF                          _TMR0L 000FD6                          _TMR1L 000FCE  
                        _SPBRG 000FAF                          _PORTA 000F80                          _PORTB 000F81  
                __CFG_USBDIV$2 000000                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
                        _TXREG 000FAD                  __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000            _tiempo_parpadeo_off 0049                __end_of_msg2LCD 7C22  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                 __CFG_EBTRB$OFF 000000  
                        _myISR 0008                __end_of_tic_LCD 7A3C                          tablat 000FF5  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 000FD8                          wtemp8 0060                   ?_parpadeoLed 002F  
              __initialization 7B86                   __end_of_main 7AE6               __end_of_PicIni21 7B12  
                       ??_main 0049                  __activetblptr 000002                         _ADCON1 000FC1  
                       _ADCON2 000FC0                         ?_myISR 002F                         _ADRESH 000FC4  
                       _ADRESL 000FC3                         _EEDATA 000FA8                         _CCPR1L 000FBE  
                       _EECON2 000FA7                         _INT0IE 007F94                         _INT0IF 007F91  
                       _INT1IE 007F83                         _INT1IF 007F80            __size_of_TIMER0_INI 001A  
                       i2l2922 7CAA            __size_of_TIMER1_INI 0020                   ?_tic_teclado 002F  
                       _TMR0IF 007F92                         _TMR1IF 007CF0                         _TMR0ON 007EAF  
                       _SPBRGH 000FB0                         _TMR1ON 007E68                 __CFG_VREGEN$ON 000000  
               __CFG_XINST$OFF 000000                 __CFG_STVREN$ON 000000                         clear_0 7BB6  
                       _teclas 2019                      ??_msg2LCD 0033                   __pdataCOMRAM 0049  
                    ??_tic_LCD 002F                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                  _OffsetPeriodo 0059  
          demo_shield2_1@flag0 0024            demo_shield2_1@flag1 0023            demo_shield2_1@flag2 0022  
          demo_shield2_1@flag3 0021            demo_shield2_1@cont1 001D            demo_shield2_1@cont2 001C  
          demo_shield2_1@cont3 001B                     __accesstop 0060        __end_of__initialization 7BBC  
              __CFG_PBADEN$OFF 000000                      ?_LCD_init 002F                  ___rparam_used 000001  
         __size_of_marca_tecla 000C                 __pcstackCOMRAM 002F                  __end_of_myISR 7CCC  
           __size_of_clear_LCD 0038                   _activador_on 0005                      LCD_init@i 0031  
                  set_CURSOR@i 0032                        ??_myISR 002F                 _casos_parpadeo 0060  
                ?_tecladoIni13 002F                     __pbssBANK0 0060                      ?_PicIni21 002F  
                   ??_LCD_init 0031                  _maximoEncoder 001A           __size_of_parpadeoLed 01AC  
                 ??_TIMER0_INI 002F                   ??_TIMER1_INI 002F            _tiempo_ventana_peso 0051  
                      Leds13@i 005C                 ??_tecladoIni13 002F                     ??_PicIni21 002F  
            __end_of_clear_LCD 7B4A             __end_of_TIMER0_INI 7A82             __end_of_TIMER1_INI 7AC2  
                   _frecuencia 005D             __size_of_write_CMD 000E             __size_of_write_LCD 0020  
         __size_of_tic_teclado 000A                        __Hparam 0000                        __Lparam 0000  
                 __psmallconst 2018                        __pcinit 7B86                        __ramtop 0800  
                      _flag_kb 0015                        __ptext0 7AC2                        __ptext1 7A3C  
                      __ptext2 7E54                        __ptext3 7B4A                        __ptext4 7BCA  
                      __ptext5 2008                        __ptext6 7B12                        __ptext7 7AA2  
                      __ptext8 7A68                        __ptext9 7AE6                        _msg2LCD 7BCA  
                    _T0CONbits 000FD5                      _T1CONbits 000FCD                      _T2CONbits 000FCA  
                      _tic_LCD 7A2A                     clear_LCD@i 0031                  _minimoEncoder 0019  
                   _set_CURSOR 7B4A                 __pintcode_body 7C22                  debounce@state 0027  
         end_of_initialization 7BBC                 set_CURSOR@posi 0031                  __Lmediumconst 0000  
                      int_func 7C22                      _RCSTAbits 000FAB                        postdec1 000FE5  
                      postinc0 000FEE                      _PORTBbits 000F81                      _PORTDbits 000F83  
                    _PORTEbits 000F84              __end_of_write_CMD 7A2A             _EstadoDeLosBotones 002E  
            __end_of_write_LCD 7AA2                      _TRISAbits 000F92                      _TRISBbits 000F93  
                    _TRISCbits 000F94                      _TRISDbits 000F95                      _TRISEbits 000F96  
            tic_encoder@estado 0057                  LCD_init@i_434 0035                  LCD_init@i_435 0039  
                LCD_init@i_436 003D                  LCD_init@i_437 0041                  LCD_init@i_438 0045  
                  _CCP1CONbits 000FBD                      _TXSTAbits 000FAC              __size_of_LCD_init 0188  
                   _write_DATA 2008           __end_of_tecladoIni13 7A52                    _BAUDCONbits 000FB8  
                __pidataCOMRAM 7A52             _tiempo_parpadeo_on 004D                 __end_of_teclas 2025  
                _activador_off 0001            start_initialization 7B86                    ?_set_CURSOR 002F  
                ??_marca_tecla 002F              __size_of_PicIni21 002C                 tecla@status_KB 0013  
                    _LowerByte 002A               __CFG_LPT1OSC$OFF 000000                _posicionEncoder 0018  
     tic_debounce@debounce_tic 0058             demo_shield2_1@cont 001E                      _UpperByte 005A  
                  __pbssCOMRAM 0001                      __pnvBANK0 0064                  ??_parpadeoLed 0037  
                    _clear_LCD 7B12                      _flagCanal 0016            __end_of_marca_tecla 7A1C  
                    __pintcode 0008            __size_of_set_CURSOR 003C                    ?_write_DATA 002F  
            Send4Disp@Nro_Disp 005B                       ?_msg2LCD 0031                    __smallconst 2018  
                     ?_tic_LCD 002F                 _desplazar_tout 000D                 __size_of_myISR 7CC4  
     demo_shield2_1@PrimeraVez 0020                  ??_tic_teclado 002F                   debounce@cnt0 0026  
                 debounce@cnt1 0025                       _LATAbits 000F89                       _LATCbits 000F8B  
                     _LATDbits 000F8C                       _LATEbits 000F8D                       _LCD_init 7CCC  
                     _LCD_tout 0064                       _PIE1bits 000F9D                    _encoderTout 0017  
                   ?_clear_LCD 002F          __size_of_tecladoIni13 0016                       _PIR1bits 000F9E  
             __CFG_WDTPS$32768 000000            __end_of_parpadeoLed 8000                     _ADCON0bits 000FC2  
                _Multiplicador 0029                _MedioPeriodoSet 000F                      _write_CMD 7A1C  
                    _write_LCD 7A82                    _INTCON2bits 000FF1                    _INTCON3bits 000FF0  
                    copy_data0 7B9A            __size_of_write_DATA 000E                   _tecladoIni13 7A3C  
                     _PicIni21 7AE6                    _marca_tecla 7A10            Botones13@Estado_BOT 002B  
      demo_shield2_1@Desplazar 001F                     _EECON1bits 000FA6                       __Hrparam 0000  
                     __Lrparam 0000            __end_of_tic_teclado 7A10                 write_DATA@dato 0030  
             __size_of_msg2LCD 0058                       _delay_kb 0014               __size_of_tic_LCD 0012  
                 ??_set_CURSOR 0031                     ?_write_CMD 002F                     ?_write_LCD 002F  
                     __ptext10 7CCC                       __ptext11 7A1C                       __ptext12 7A82  
                     __ptext14 7A06                       __ptext15 7A2A                       __ptext16 7A10  
                     _bot_tout 002C                       _led_tout 0011                  __size_of_main 0024  
                  _parpadeoLed 7E54                    ??_clear_LCD 0031                       int$flags 005F  
                     _mux_tout 002D             __end_of_set_CURSOR 7B86                       msg2LCD@i 0033  
        __CFG_CPUDIV$OSC1_PLL2 000000                     _INTCONbits 000FF2                       intlevel2 0000  
                write_CMD@dato 0030                    _tic_teclado 7A06                  write_LCD@dato 002F  
                 ??_write_DATA 0030                     _TIMER0_INI 7A68                     _TIMER1_INI 7AA2  
                  ??_write_CMD 0030                    ??_write_LCD 002F             __CFG_FOSC$HSPLL_HS 000000  
           __end_of_write_DATA 2016  
